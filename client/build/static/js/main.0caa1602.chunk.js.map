{"version":3,"sources":["dataProvider/dataProvider.js","auth/authProvider.js","shared/serachFilter.js","category/categories.js","hashTag/hashTags.js","user/user.js","post/post.js","comment/comment.js","uploader/uploader.js","App.js","serviceWorker.js","index.js"],"names":["apiUrl","dataProvider","type","resource","params","url","token","localStorage","getItem","options","headers","Headers","Accept","Content-Type","Authorization","GET_LIST","_params$pagination","pagination","page","perPage","_params$sort","sort","field","order","query","limit","filter","sortField","console","log","concat","stringify","GET_MANY","GET_MANY_REFERENCE","target","id","GET_ONE","CREATE","_params$data","data","title","body","files","categories","tags","payload","FormData","append","i","length","rawFile","delete","method","_params$data2","name","JSON","UPDATE","DELETE","Error","fetch","then","res","json","total","count","Object","objectSpread","authProvider","AUTH_LOGIN","username","password","request","Request","email","response","status","statusText","_ref","setItem","role","AUTH_LOGOUT","removeItem","Promise","resolve","AUTH_CHECK","reject","AUTH_GET_PERMISSIONS","AUTH_ERROR","SearchFilter","props","react_default","a","createElement","Filter","TextInput","label","source","alwaysOn","SelectInput","optionText","CategoryList","List","assign","filters","serachFilter_SearchFilter","Datagrid","rowClick","TextField","DateField","EditButton","basePath","CategoryTitle","record","CategoryCreate","Create","SimpleForm","validate","required","ImageInput","accept","ImageField","CategoryEdit","Edit","categories_CategoryTitle","DisabledInput","HashTagList","HashTagTitle","HashTagCreate","HashTagEdit","hashTags_HashTagTitle","UserList","EmailField","UserTitle","fullName","UserEdit","user_UserTitle","choices","AddNewCommentButton","Button","component","Link","to","ChatBubble_default","PostList","sortable","PostTitle","_ref2","PostCreate","esm","toolbar","size","font","direction","align","ReferenceArrayInput","reference","SelectArrayInput","ChipField","PostEdit","post_PostTitle","TabbedForm","FormTab","RichTextField","ArrayField","SingleFieldList","ReferenceManyField","ReferenceField","post_AddNewCommentButton","AddNewReplyButton","post","CommentList","CommentTitle","CommentCreate","postId","parse","location","search","parentId","defaultValue","redirect","CommentEdit","comment_CommentTitle","comment_AddNewReplyButton","UploaderList","FileField","UploaderTitle","UploaderCreate","FileInput","UploaderEdit","uploader_UploaderTitle","App","Admin","permissions","Resource","list","edit","icon","UserIcon","create","ListIcon","PostIcon","CommentIcon","FileUpload","ReportIcon","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0caa1602.chunk.js","sourcesContent":["import { stringify } from 'query-string';\nimport {\n    GET_LIST,\n    GET_ONE,\n    CREATE,\n    UPDATE,\n    DELETE,\n    GET_MANY_REFERENCE,\n    GET_MANY\n} from 'react-admin';\n\n//const apiUrl = 'http://localhost:3001';\nconst apiUrl = 'http://18.194.127.99:3001';\n\nexport default (type, resource, params) => {\n    let url = '';\n    const token = localStorage.getItem('token');\n    let options = {\n        headers: new Headers({\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: token\n        }),\n    };\n    switch (type) {\n        case GET_LIST: {\n            const { page, perPage } = params.pagination;\n            const { field, order } = params.sort;\n            const query = {\n                page: page,\n                limit: perPage,\n                query: params.filter.query,\n                order: order,\n                sortField: field\n            };\n            console.log(params);\n            url = `${apiUrl}/${resource}?${stringify(query)}`;\n            break;\n        }\n        case GET_MANY:\n            console.log('many');\n            console.log(params);\n            url = `${apiUrl}/${resource}`;\n            break;\n        case GET_MANY_REFERENCE:\n            console.log('refre');\n            console.log(params);\n            if (params.target == 'parentId') { /* refrence is itself */\n                url = `${apiUrl}/${resource}?parentId=${params.id}`;\n            } else {\n                url = `${apiUrl}/${resource}?postId=${params.id}`;\n            }\n            break;\n        case GET_ONE:\n            url = `${apiUrl}/${resource}/getOne/${params.id}`;\n            break;\n        case CREATE:\n            /* post controll */\n            switch (resource) {\n                case 'posts': {\n                    const { title, body, files, categories, tags } = params.data;\n\n                    const payload = new FormData();\n                    payload.append('title', title);\n                    payload.append('body', body);\n                    if (categories) {\n                        for (let i = 0; i < categories.length; i++) {\n                            payload.append('categories', categories[i]);\n                        }\n                    }\n                    if (tags) {\n                        for (let i = 0; i < tags.length; i++) {\n                            payload.append('tags', tags[i]);\n                        }\n                    }\n                    if (files) {\n                        payload.append('files', files.rawFile);\n                    }\n                    url = `${apiUrl}/${resource}/new`;\n                    options.headers.delete('Content-Type');\n                    options.method = 'POST';\n                    options.body = payload;\n                    break;\n                }\n                case 'uploads': {\n                    const { files } = params.data;\n                    const payload = new FormData();\n\n                    if (files) {\n                        payload.append('files', files.rawFile);\n                    }\n                    url = `${apiUrl}/${resource}/new`;\n                    options.headers.delete('Content-Type');\n                    options.method = 'POST';\n                    options.body = payload;\n                    break;\n                }\n                case 'categories': {\n                    const { name, files } = params.data;\n                    const payload = new FormData();\n\n                    payload.append('name', name);\n                    if (files) {\n                        payload.append('files', files.rawFile);\n                    }\n                    url = `${apiUrl}/${resource}/new`;\n                    options.headers.delete('Content-Type');\n                    options.method = 'POST';\n                    options.body = payload;\n                    break;\n                }\n                default:\n                    /* any not post controll */\n                    url = `${apiUrl}/${resource}/new`;\n                    options.method = 'POST';\n                    options.body = JSON.stringify(params.data);\n                    break;\n            }\n            break;\n        case UPDATE:\n            url = `${apiUrl}/${resource}/update/${params.id}`;\n            if (resource === 'users') {\n                url = `${apiUrl}/${resource}/promote/${params.id}`;\n            }\n\n            options.method = 'PUT';\n            options.body = JSON.stringify(params.data);\n            break;\n        case DELETE:\n            url = `${apiUrl}/${resource}/delete/${params.id}`;\n            options.method = 'DELETE';\n            break;\n        default:\n            throw new Error(`Unsupported Data Provider request type ${type}`);\n    }\n    // let headers;\n    return fetch(url, options)\n        .then(res => {\n            return res.json();\n        })\n        .then(json => {\n            switch (type) {\n                case GET_LIST:\n                case GET_MANY_REFERENCE:\n                    console.log(json);\n                    return {\n                        data: json.data,\n                        total: json.count\n                    };\n                case CREATE:\n                    console.log(json);\n                    return { data: { ...params.data, id: json.data.id } };\n                case GET_ONE:\n                    console.log(json);\n                    return { data: json.data };\n                case UPDATE:\n                    console.log(json);\n                    return { data: json.data };\n                case DELETE:\n                    console.log(json);\n                    return json;\n                default:\n                    return { data: json.data };\n            }\n        });\n};","import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_CHECK, AUTH_GET_PERMISSIONS, AUTH_ERROR } from 'react-admin';\n\nconst apiLogin = 'http://18.194.127.99:3001';\n//const apiLogin = 'http://localhost:3001';\nexport default (type, params) => {\n    if (type === AUTH_LOGIN) {\n        const { username, password } = params;\n        const request = new Request(`${apiLogin}/auth/login/admin`, {\n            method: 'POST',\n            body: JSON.stringify({ email: username, password }),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        })\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then(({ data, token }) => {\n                localStorage.setItem('token', token);\n                localStorage.setItem('role', data.role);\n            });\n    }\n    if (type === AUTH_LOGOUT) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('role');\n        return Promise.resolve();\n    }\n    //return Promise.resolve();\n    if (type === AUTH_CHECK) {\n        return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\n    }\n    if (type === AUTH_GET_PERMISSIONS) {\n        const role = localStorage.getItem('role');\n        return role ? Promise.resolve(role) : Promise.reject();\n    }\n    if (type === AUTH_ERROR) {\n        // const status = params.status;\n        // if (status === 401 || status === 403) {\n        localStorage.removeItem('token');\n        return Promise.reject();\n        // }\n        //return Promise.resolve();\n    }\n}","import React from 'react';\nimport { Filter, SelectInput, TextInput } from 'react-admin';\n\nexport const SearchFilter = (props) => (\n    <Filter {...props} >\n        <TextInput label=\"Search\" source=\"query\" alwaysOn />\n        < SelectInput optionText=\"name\" />\n    </Filter>\n);","import React from 'react';\nimport { List, Datagrid, TextField, ImageInput, ImageField, DateField, Create, Edit, SimpleForm, required, TextInput, DisabledInput, EditButton, DeleteButton, } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\n\nexport const CategoryList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"name\" />\n            <DateField source=\"createdAt\" />\n            <DateField source=\"updatedAt\" />\n            <EditButton basePath=\"/categories\" />\n        </Datagrid>\n    </List>\n);\nconst CategoryTitle = ({ record }) => {\n    return <span>Category {record ? `\"${record.name}\"` : ''}</span>;\n};\n\nexport const CategoryCreate = (props) => (\n    <Create title=\"Create a Category\" {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" validate={required()} />\n            <ImageInput source=\"files\" label=\"Background image\" accept=\"image/*\" validate={required()}>\n                <ImageField source=\"src\" title=\"title\" />\n            </ImageInput>\n        </SimpleForm>\n    </Create>\n);\n\nexport const CategoryEdit = (props) => (\n    <Edit title={<CategoryTitle />} {...props}>\n        <SimpleForm>\n            <DisabledInput source=\"id\" />\n            <TextInput source=\"name\" />\n            <ImageField source=\"backgroundImage\" title=\"backgroundImage\" />\n        </SimpleForm>\n    </Edit>\n);\n","import React from 'react';\nimport { List, Datagrid, TextField, DateField, required, Create, Edit, SimpleForm, TextInput, DisabledInput, EditButton, DeleteButton } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\n\nexport const HashTagList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"name\" />\n            <DateField source=\"createdAt\" />\n            <DateField source=\"updatedAt\" />\n            <EditButton basePath=\"/hashTags\" />\n        </Datagrid>\n    </List>\n);\nconst HashTagTitle = ({ record }) => {\n    return <span>HashTag {record ? `\"${record.name}\"` : ''}</span>;\n};\n\nexport const HashTagCreate = (props) => (\n    <Create title=\"Create a HashTag\" {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" validate={required()} />\n        </SimpleForm>\n    </Create>\n);\n\nexport const HashTagEdit = (props) => (\n    <Edit title={<HashTagTitle />} {...props}>\n        <SimpleForm>\n            <DisabledInput source=\"id\" />\n            <TextInput source=\"name\" />\n        </SimpleForm>\n    </Edit>\n);\n","import React from 'react';\nimport { List, Datagrid, TextField, DateField, EmailField, Create, Edit, SimpleForm, TextInput, SelectInput, DisabledInput, EditButton } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\n//ArrayField,Create, Edit, SimpleForm, TextInput, DisabledInput,SelectField\n\nexport const UserList = props => (\n    <List filters={<SearchFilter />}{...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"fullName\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"number\" />\n            <TextField source=\"role\" />\n            <DateField source=\"createdAt\" />\n            <DateField source=\"updatedAt\" />\n            <EditButton basePath=\"/users\" />\n            {/* <ArrayField source=\"subscribed\">\n                <Datagrid>\n                    <TextField source=\"id\" />\n                    <TextField source=\"name\" />\n                </Datagrid>\n            </ArrayField> */}\n        </Datagrid>\n    </List>\n);\nconst UserTitle = ({ record }) => {\n    return <span>User {record ? `\"${record.fullName}\"` : ''}</span>;\n};\n\n// export const UserCreate = (props) => (\n//     <Create title=\"Create a User\" {...props}>\n//         <SimpleForm>\n//             <TextInput source=\"name\" />\n//             {/* <SelectInput source=\"role\" choices={[\n//                 { id: 'admin', name: 'admin' },\n//                 { id: 'maintainer', name: 'maintainer' },\n//                 { id: 'user', name: 'user' }\n//             ]} optionText={\"name\"} optionValue={\"id\"} /> */}\n//         </SimpleForm>\n//     </Create>\n// );\n\nexport const UserEdit = (props) => (\n    <Edit title={<UserTitle />} {...props}>\n        <SimpleForm>\n            <DisabledInput source=\"id\" />\n            <DisabledInput source=\"fullName\" />\n            <DisabledInput source=\"email\" />\n            <DisabledInput source=\"number\" />\n            <SelectInput source=\"role\" choices={[\n                { id: 'admin', name: 'admin' },\n                { id: 'maintainer', name: 'maintainer' },\n                { id: 'user', name: 'user' }\n            ]} />\n        </SimpleForm>\n    </Edit>\n);\n","import React from 'react';\nimport CardActions from '@material-ui/core/CardActions';\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport { Link } from 'react-router-dom';\nimport { List, Datagrid, TextField, DateField, Create, Edit, SimpleForm, TextInput, DisabledInput, EditButton, DeleteButton, ReferenceArrayInput, SelectArrayInput, ChipField, ReferenceArrayField, ShowButton, RichTextField, TabbedForm, FormTab, SingleFieldList, ArrayField, ImageInput, ImageField, required, ReferenceManyField, ReferenceField, Button } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\nimport RichTextInput from 'ra-input-rich-text';\n\n\nconst AddNewCommentButton = ({ record }) => (\n    <Button\n        component={Link}\n        to={`/comments/create?postId=${record.id}`}\n        label=\"Add a comment\"\n    >\n        <ChatBubbleIcon />\n    </Button>\n);\n\nexport const PostList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"title\" sortable={false} />\n            <TextField source=\"reactionsCount\" />\n            <DateField source=\"createdAt\" sortable={false} />\n            <DateField source=\"updatedAt\" sortable={false} />\n            <EditButton basePath=\"/posts\" />\n        </Datagrid>\n    </List>\n);\nconst PostTitle = ({ record }) => {\n    return <span>Post {record ? `\"${record.title}\"` : ''}</span>;\n};\n\nexport const PostCreate = (props) => (\n    <Create title=\"Create a Post\" {...props}>\n        <SimpleForm>\n            <TextInput source=\"title\" validate={required()} />\n            {/* editor */}\n\n            <RichTextInput source=\"body\" toolbar={[\n                [{ 'size': ['small', false, 'large', 'huge'] }],\n                [{ 'font': [] }],\n                [{ 'direction': 'rtl' }],\n                [{ 'align': [] }],\n                ['bold', 'italic', 'underline', 'link', 'blockquote', 'image', 'video']]\n            } />\n\n            <ImageInput source=\"files\" label=\"Background image\" accept=\"image/*\" validate={required()}>\n                <ImageField source=\"src\" title=\"title\" />\n            </ImageInput>\n\n            <ReferenceArrayInput label=\"categories\" reference=\"categories\" source=\"categories\" perPage={100} validate={required()}>\n                <SelectArrayInput >\n                    <ChipField source=\"name\" />\n                </SelectArrayInput>\n            </ReferenceArrayInput>\n\n            <ReferenceArrayInput label=\"tags\" reference=\"hashTags\" source=\"tags\" perPage={100} validate={required()}>\n                <SelectArrayInput >\n                    <ChipField source=\"name\" />\n                </SelectArrayInput>\n            </ReferenceArrayInput>\n        </SimpleForm>\n    </Create>\n);\n\nexport const PostEdit = (props) => (\n    <Edit title={<PostTitle />} {...props}>\n\n        <TabbedForm>\n            <FormTab label=\"summary\">\n                <DisabledInput source=\"id\" />\n                <DisabledInput source=\"title\" />\n                <DisabledInput source=\"reactionsCount\" />\n                <RichTextField source=\"body\" />\n                <ImageField source=\"backgroundImage\" title=\"backgroundImage\" />\n\n\n                <ArrayField source=\"categories\">\n                    <SingleFieldList>\n                        <ChipField source=\"name\" />\n                    </SingleFieldList>\n                </ArrayField>\n\n                <ArrayField source=\"tags\">\n                    <SingleFieldList>\n                        <ChipField source=\"name\" />\n                    </SingleFieldList>\n                </ArrayField>\n\n            </FormTab>\n            <FormTab label=\"update\">\n                <TextInput source=\"title\" />\n                <RichTextInput source=\"body\" toolbar={[\n                    [{ 'size': ['small', false, 'large', 'huge'] }],\n                    [{ 'font': [] }],\n                    [{ 'direction': 'rtl' }],\n                    [{ 'align': [] }],\n                    ['bold', 'italic', 'underline', 'link', 'blockquote', 'image', 'video']]\n                } />\n                <ReferenceArrayInput label=\"categories\" reference=\"categories\" source=\"categories\" perPage={100} validate={required()}>\n                    <SelectArrayInput source=\"name\" >\n                        <ChipField source=\"name\" />\n                    </SelectArrayInput>\n                </ReferenceArrayInput>\n\n                <ReferenceArrayInput label=\"tags\" reference=\"hashTags\" source=\"tags\" perPage={100} validate={required()}>\n                    <SelectArrayInput >\n                        <ChipField source=\"name\" />\n                    </SelectArrayInput>\n                </ReferenceArrayInput>\n            </FormTab>\n            <FormTab label=\"Comments\">\n                <ReferenceManyField\n                    label=\"Comments\"\n                    reference=\"comments\"\n                    target=\"post.id\"\n                >\n                    <Datagrid rowClick=\"edit\">\n                        <TextField source=\"id\" />\n                        <TextField source=\"body\" sortable={false} />\n                        <ReferenceField label=\"Author Name\" source=\"user.id\" reference=\"users\" sortable={false}>\n                            <ChipField source=\"fullName\" />\n                        </ReferenceField>\n                        <ReferenceField label=\"Author Email\" source=\"user.id\" reference=\"users\" sortable={false}>\n                            <ChipField source=\"email\" />\n                        </ReferenceField>\n                        <ReferenceField label=\"Post\" source=\"post.id\" reference=\"posts\" sortable={false}>\n                            <ChipField source=\"id\" />\n                        </ReferenceField>\n                        <TextField source=\"reports\" sortable={false} />\n                        <DateField source=\"createdAt\" sortable={false} />\n                        <DateField source=\"updatedAt\" sortable={false} />\n                        <EditButton basePath=\"/comments\" />\n                    </Datagrid>\n                </ReferenceManyField>\n                <AddNewCommentButton />\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n","import React from 'react';\nimport CardActions from '@material-ui/core/CardActions';\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport { Link } from 'react-router-dom';\nimport { Button, List, Datagrid, TextField, DateField, Create, Edit, SimpleForm, TextInput, DisabledInput, EditButton, DeleteButton, ReferenceField, ChipField, TabbedForm, FormTab, ReferenceManyField, ReferenceInput, SelectInput } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\nimport { parse } from 'query-string';\n\nconst AddNewReplyButton = ({ record }) => (\n    <Button\n        component={Link}\n        to={`/comments/create?parentId=${record.id}&postId=${record.post.id}`}\n        label=\"Add a Reply\"\n    >\n        <ChatBubbleIcon />\n    </Button>\n);\n\nexport const CommentList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"body\" sortable={false} />\n            <ReferenceField label=\"Post\" source=\"post.id\" reference=\"posts\" sortable={false}>\n                <ChipField source=\"id\" />\n            </ReferenceField>\n            <TextField source=\"reports\"  />\n            <DateField source=\"createdAt\" sortable={false} />\n            <DateField source=\"updatedAt\" sortable={false} />\n        </Datagrid>\n    </List>\n);\nconst CommentTitle = ({ record }) => {\n    return <span>Comment {record ? `\"${record.body}\"` : ''}</span>;\n};\n\nexport const CommentCreate = (props) => {\n\n    const postId = parse(props.location.search).postId;\n    const parentId = parse(props.location.search).parentId || null;\n\n    return (\n        <Create title=\"Create a Comment\" {...props}>\n            <SimpleForm\n                defaultValue={{ postId, parentId }}\n                redirect={`/posts/${postId}/2`}\n            >\n                <DisabledInput source=\"postId\" />\n                <DisabledInput source=\"parentId\" />\n\n                <TextInput source=\"body\" />\n            </SimpleForm>\n        </Create>\n    )\n};\n\nexport const CommentEdit = (props) => (\n    <Edit title={<CommentTitle />} {...props}>\n        <TabbedForm>\n            <FormTab label=\"summary\">\n                <DisabledInput source=\"id\" />\n                <DisabledInput source=\"body\" />\n            </FormTab>\n            <FormTab label=\"replies\">\n                <ReferenceManyField\n                    label=\"replies\"\n                    reference=\"comments\"\n                    target=\"parentId\"\n                >\n                    <Datagrid rowClick=\"edit\">\n                        <TextField source=\"id\" />\n                        <TextField source=\"body\" sortable={false} />\n                        <ReferenceField label=\"Author Name\" source=\"user.id\" reference=\"users\" sortable={false}>\n                            <ChipField source=\"fullName\" />\n                        </ReferenceField>\n                        <ReferenceField label=\"Author Email\" source=\"user.id\" reference=\"users\" sortable={false}>\n                            <ChipField source=\"email\" />\n                        </ReferenceField>\n                        <ReferenceField label=\"Post\" source=\"post.id\" reference=\"posts\" sortable={false}>\n                            <ChipField source=\"id\" />\n                        </ReferenceField>\n                        <TextField source=\"reports\" sortable={false} />\n                        <DateField source=\"createdAt\" sortable={false} />\n                        <DateField source=\"updatedAt\" sortable={false} />\n                        <EditButton basePath=\"/comments\" />\n                    </Datagrid>\n                </ReferenceManyField>\n                <AddNewReplyButton />\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n","import React from 'react';\nimport { List, Datagrid, TextField, FileInput, FileField, DateField, Create, Edit, required, SimpleForm, TextInput, DisabledInput, EditButton, DeleteButton, } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\n\nexport const UploaderList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <FileField source=\"url\" />\n            <DateField source=\"createdAt\" />\n            <DateField source=\"updatedAt\" />\n            <EditButton basePath=\"/uploads\" />\n        </Datagrid>\n    </List>\n);\nconst UploaderTitle = ({ record }) => {\n    return <span>Uploader {record ? `\"${record.url}\"` : ''}</span>;\n};\n\nexport const UploaderCreate = (props) => (\n    <Create title=\"Create a Uploader\" {...props}>\n        <SimpleForm>\n            <FileInput source=\"files\" label=\"upload video\" accept=\"video/*\" validate={required()} >\n                <FileField source=\"src\" />\n            </FileInput>\n        </SimpleForm>\n    </Create>\n);\n\nexport const UploaderEdit = (props) => (\n    <Edit title={<UploaderTitle />} {...props}>\n        <SimpleForm>\n            <DisabledInput source=\"id\" />\n            <TextInput source=\"url\" />\n        </SimpleForm>\n    </Edit>\n);\n","import React from 'react';\nimport { Admin, Resource } from 'react-admin';\n/* icons start*/\nimport PostIcon from '@material-ui/icons/Book';\nimport UserIcon from '@material-ui/icons/People';\nimport ListIcon from '@material-ui/icons/LibraryBooks';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport ReportIcon from '@material-ui/icons/Report';\nimport FileUpload from '@material-ui/icons/FileUpload';\n/* icons end */\n\n/* rest providers & auth start*/\nimport dataProvider from './dataProvider/dataProvider';\nimport authProvider from './auth/authProvider';\n/* rest providers & auth end*/\n\n/* dashboard modules start */\nimport { CategoryList, CategoryCreate, CategoryEdit } from './category/categories';\nimport { HashTagList, HashTagCreate, HashTagEdit } from './hashTag/hashTags';\nimport { UserList, UserEdit } from './user/user';\nimport { PostList, PostCreate, PostEdit } from './post/post';\nimport { CommentList, CommentEdit, CommentCreate } from './comment/comment';\nimport { UploaderList, UploaderCreate, UploaderEdit } from './uploader/uploader';\n/* dashboard modules end */\n\nconst App = () => (\n  <Admin authProvider={authProvider} dataProvider={dataProvider}>\n    {permissions => [\n      permissions === 'admin'\n        ? <Resource name=\"users\" list={UserList} edit={UserEdit} icon={UserIcon} />\n        : null,\n      <Resource name=\"categories\" list={CategoryList} create={CategoryCreate} edit={CategoryEdit} />,\n      <Resource name=\"hashTags\" list={HashTagList} create={HashTagCreate} edit={HashTagEdit} icon={ListIcon} />,\n      <Resource name=\"posts\" list={PostList} create={PostCreate} edit={PostEdit} icon={PostIcon} />,\n      <Resource name=\"comments\" list={CommentList} create={CommentCreate} edit={CommentEdit} icon={CommentIcon} />,\n      <Resource name=\"uploads\" list={UploaderList} create={UploaderCreate} edit={UploaderEdit} icon={FileUpload} />,\n      <Resource name=\"reports\" icon={ReportIcon} />\n\n    ]}\n\n  </Admin>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}