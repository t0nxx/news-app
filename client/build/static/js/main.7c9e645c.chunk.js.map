{"version":3,"sources":["dataProvider/dataProvider.js","auth/authProvider.js","shared/serachFilter.js","category/categories.js","hashTag/hashTags.js","user/user.js","post/post.js","comment/comment.js","source/source.js","uploader/uploader.js","notification/notification.js","App.js","serviceWorker.js","index.js"],"names":["apiUrl","dataProvider","type","resource","params","url","token","localStorage","getItem","options","headers","Headers","Accept","Content-Type","Authorization","GET_LIST","_params$pagination","pagination","page","perPage","_params$sort","sort","field","order","query","limit","filter","sortField","console","log","concat","stringify","GET_MANY","GET_MANY_REFERENCE","target","id","GET_ONE","CREATE","_params$data","data","title","body","files","categories","tags","source","payload","FormData","append","i","length","rawFile","delete","method","_params$data2","name","JSON","UPDATE","_params$data3","_params$data4","DELETE","Error","fetch","then","res","json","total","count","Object","objectSpread","authProvider","AUTH_LOGIN","username","password","request","Request","email","response","status","_ref","setItem","role","AUTH_LOGOUT","removeItem","Promise","resolve","AUTH_CHECK","reject","AUTH_GET_PERMISSIONS","AUTH_ERROR","SearchFilter","props","react_default","a","createElement","Filter","TextInput","label","alwaysOn","SelectInput","optionText","CategoryList","List","assign","filters","serachFilter_SearchFilter","Datagrid","rowClick","TextField","DateField","EditButton","basePath","CategoryTitle","record","CategoryCreate","Create","SimpleForm","validate","required","ImageInput","accept","ImageField","CategoryEdit","Edit","categories_CategoryTitle","DisabledInput","HashTagList","HashTagTitle","HashTagCreate","HashTagEdit","hashTags_HashTagTitle","UserList","EmailField","UserTitle","fullName","UserEdit","user_UserTitle","choices","AddNewCommentButton","Button","component","Link","to","ChatBubble_default","PostList","sortable","PostTitle","_ref2","PostCreate","esm","toolbar","size","font","direction","align","ReferenceArrayInput","reference","SelectArrayInput","ChipField","ReferenceInput","PostEdit","post_PostTitle","TabbedForm","FormTab","ReferenceManyField","ReferenceField","post_AddNewCommentButton","AddNewReplyButton","post","CommentList","CommentTitle","CommentCreate","postId","parse","location","search","parentId","defaultValue","redirect","CommentEdit","comment_CommentTitle","comment_AddNewReplyButton","SourceList","SourceTitle","SourceCreate","SourceEdit","source_SourceTitle","UploaderList","FileField","UploaderTitle","UploaderCreate","FileInput","UploaderEdit","uploader_UploaderTitle","NotificationList","NotificationCreate","App","Admin","permissions","Resource","list","edit","icon","UserIcon","create","ListIcon","PostIcon","CommentIcon","SourceIcon","FileUpload","NotificationsIcon","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c9e645c.chunk.js","sourcesContent":["import { stringify } from 'query-string';\nimport {\n    GET_LIST,\n    GET_ONE,\n    CREATE,\n    UPDATE,\n    DELETE,\n    GET_MANY_REFERENCE,\n    GET_MANY\n} from 'react-admin';\n\n//const apiUrl = 'http://localhost:3001';\nconst apiUrl = 'http://18.194.127.99:3001';\n\nexport default (type, resource, params) => {\n    let url = '';\n    const token = localStorage.getItem('token');\n    let options = {\n        headers: new Headers({\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: token\n        }),\n    };\n    switch (type) {\n        case GET_LIST: {\n            const { page, perPage } = params.pagination;\n            const { field, order } = params.sort;\n            const query = {\n                page: page,\n                limit: perPage,\n                query: params.filter.query,\n                order: order,\n                sortField: field\n            };\n            console.log(params);\n            url = `${apiUrl}/${resource}?${stringify(query)}`;\n            break;\n        }\n        case GET_MANY:\n            console.log('many');\n            console.log(params);\n            url = `${apiUrl}/${resource}`;\n            break;\n        case GET_MANY_REFERENCE:\n            console.log('refre');\n            console.log(params);\n            if (params.target == 'parentId') { /* refrence is itself */\n                url = `${apiUrl}/${resource}?parentId=${params.id}`;\n            } else {\n                url = `${apiUrl}/${resource}?postId=${params.id}`;\n            }\n            break;\n        case GET_ONE:\n            url = `${apiUrl}/${resource}/getOne/${params.id}`;\n            break;\n        case CREATE:\n            /* post controll */\n            switch (resource) {\n                case 'posts': {\n                    const { title, body, files, categories, tags, source } = params.data;\n\n                    const payload = new FormData();\n                    payload.append('title', title);\n                    payload.append('body', body);\n                    payload.append('source', source);\n                    if (categories) {\n                        for (let i = 0; i < categories.length; i++) {\n                            payload.append('categories', categories[i]);\n                        }\n                    }\n                    if (tags) {\n                        for (let i = 0; i < tags.length; i++) {\n                            payload.append('tags', tags[i]);\n                        }\n                    }\n                    if (files) {\n                        payload.append('files', files.rawFile);\n                    }\n                    url = `${apiUrl}/${resource}/new`;\n                    options.headers.delete('Content-Type');\n                    options.method = 'POST';\n                    options.body = payload;\n                    break;\n                }\n                case 'uploads': {\n                    const { files } = params.data;\n                    const payload = new FormData();\n\n                    if (files) {\n                        payload.append('files', files.rawFile);\n                    }\n                    url = `${apiUrl}/${resource}/new`;\n                    options.headers.delete('Content-Type');\n                    options.method = 'POST';\n                    options.body = payload;\n                    break;\n                }\n                case 'categories':\n                case 'sources': {\n                    const { name, files } = params.data;\n                    const payload = new FormData();\n\n                    payload.append('name', name);\n                    if (files) {\n                        payload.append('files', files.rawFile);\n                    }\n                    url = `${apiUrl}/${resource}/new`;\n                    options.headers.delete('Content-Type');\n                    options.method = 'POST';\n                    options.body = payload;\n                    break;\n                }\n                default:\n                    /* any not post controll */\n                    url = `${apiUrl}/${resource}/new`;\n                    options.method = 'POST';\n                    options.body = JSON.stringify(params.data);\n                    break;\n            }\n            break;\n        case UPDATE:\n            if (resource === 'posts') {\n                const { title, body, files, categories, tags, source } = params.data;\n\n                const payload = new FormData();\n                payload.append('title', title);\n                payload.append('body', body);\n                payload.append('source', source);\n                if (categories) {\n                    for (let i = 0; i < categories.length; i++) {\n                        payload.append('categories', categories[i]);\n                    }\n                }\n                if (tags) {\n                    for (let i = 0; i < tags.length; i++) {\n                        payload.append('tags', tags[i]);\n                    }\n                }\n                if (files) {\n                    payload.append('files', files.rawFile);\n                }\n                url = `${apiUrl}/${resource}/update/${params.id}`;\n                options.headers.delete('Content-Type');\n                options.method = 'PUT';\n                options.body = payload;\n            } else if (resource === 'categories' || resource === 'sources') {\n                const { name, files } = params.data;\n                const payload = new FormData();\n\n                payload.append('name', name);\n                if (files) {\n                    payload.append('files', files.rawFile);\n                }\n                url = `${apiUrl}/${resource}/update/${params.id}`;\n                options.headers.delete('Content-Type');\n                options.method = 'PUT';\n                options.body = payload;\n\n            } else {\n                url = `${apiUrl}/${resource}/update/${params.id}`;\n                if (resource === 'users') {\n                    url = `${apiUrl}/${resource}/promote/${params.id}`;\n                }\n                options.method = 'PUT';\n                options.body = JSON.stringify(params.data);\n            }\n            break;\n        case DELETE:\n            url = `${apiUrl}/${resource}/delete/${params.id}`;\n            options.method = 'DELETE';\n            break;\n        default:\n            throw new Error(`Unsupported Data Provider request type ${type}`);\n    }\n    // let headers;\n    return fetch(url, options)\n        .then(res => {\n            return res.json();\n        })\n        .then(json => {\n            switch (type) {\n                case GET_LIST:\n                case GET_MANY_REFERENCE:\n                    console.log(json);\n                    return {\n                        data: json.data,\n                        total: json.count\n                    };\n                case CREATE:\n                    console.log(json);\n                    return { data: { ...params.data, id: json.data.id } };\n                case GET_ONE:\n                    console.log(json);\n                    return { data: json.data };\n                case UPDATE:\n                    console.log(json);\n                    return { data: json.data };\n                case DELETE:\n                    console.log(json);\n                    return json;\n                default:\n                    return { data: json.data };\n            }\n        });\n};","import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_CHECK, AUTH_GET_PERMISSIONS, AUTH_ERROR } from 'react-admin';\n\nconst apiLogin = 'http://18.194.127.99:3001';\n//const apiLogin = 'http://localhost:3001';\nexport default (type, params) => {\n    if (type === AUTH_LOGIN) {\n        const { username, password } = params;\n        const request = new Request(`${apiLogin}/auth/login/admin`, {\n            method: 'POST',\n            body: JSON.stringify({ email: username, password }),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        })\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error('invalid email / password');\n                }\n                return response.json();\n            })\n            .then(({ data, token }) => {\n                localStorage.setItem('token', token);\n                localStorage.setItem('role', data.role);\n            });\n    }\n    if (type === AUTH_LOGOUT) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('role');\n        return Promise.resolve();\n    }\n    //return Promise.resolve();\n    if (type === AUTH_CHECK) {\n        return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\n    }\n    if (type === AUTH_GET_PERMISSIONS) {\n        const role = localStorage.getItem('role');\n        return role ? Promise.resolve(role) : Promise.reject();\n    }\n    if (type === AUTH_ERROR) {\n        // const status = params.status;\n        // if (status === 401 || status === 403) {\n        localStorage.removeItem('token');\n        return Promise.reject();\n        // }\n        //return Promise.resolve();\n    }\n}","import React from 'react';\nimport { Filter, SelectInput, TextInput } from 'react-admin';\n\nexport const SearchFilter = (props) => (\n    <Filter {...props} >\n        <TextInput label=\"Search\" source=\"query\" alwaysOn />\n        < SelectInput optionText=\"name\" />\n    </Filter>\n);","import React from 'react';\nimport { List, Datagrid, TextField, ImageInput, ImageField, DateField, Create, Edit, SimpleForm, required, TextInput, DisabledInput, EditButton, DeleteButton, } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\n\nexport const CategoryList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"name\" />\n            <DateField source=\"createdAt\" />\n            <DateField source=\"updatedAt\" />\n            <EditButton basePath=\"/categories\" />\n        </Datagrid>\n    </List>\n);\nconst CategoryTitle = ({ record }) => {\n    return <span>Category {record ? `\"${record.name}\"` : ''}</span>;\n};\n\nexport const CategoryCreate = (props) => (\n    <Create title=\"Create a Category\" {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" validate={required()} />\n            <ImageInput source=\"files\" label=\"Background image\" accept=\"image/*\" validate={required()}>\n                <ImageField source=\"src\" title=\"title\" />\n            </ImageInput>\n        </SimpleForm>\n    </Create>\n);\n\nexport const CategoryEdit = (props) => (\n    <Edit title={<CategoryTitle />} {...props}>\n        <SimpleForm>\n            <DisabledInput source=\"id\" />\n            <TextInput source=\"name\" />\n            <ImageField source=\"backgroundImage\" title=\"backgroundImage\" />\n            <ImageInput source=\"files\" label=\"Background image\" accept=\"image/*\" validate={required()}>\n                <ImageField source=\"src\" title=\"title\" />\n            </ImageInput>\n        </SimpleForm>\n    </Edit>\n);\n","import React from 'react';\nimport { List, Datagrid, TextField, DateField, required, Create, Edit, SimpleForm, TextInput, DisabledInput, EditButton, DeleteButton } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\n\nexport const HashTagList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"name\" />\n            <DateField source=\"createdAt\" />\n            <DateField source=\"updatedAt\" />\n            <EditButton basePath=\"/hashTags\" />\n        </Datagrid>\n    </List>\n);\nconst HashTagTitle = ({ record }) => {\n    return <span>HashTag {record ? `\"${record.name}\"` : ''}</span>;\n};\n\nexport const HashTagCreate = (props) => (\n    <Create title=\"Create a HashTag\" {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" validate={required()} />\n        </SimpleForm>\n    </Create>\n);\n\nexport const HashTagEdit = (props) => (\n    <Edit title={<HashTagTitle />} {...props}>\n        <SimpleForm>\n            <DisabledInput source=\"id\" />\n            <TextInput source=\"name\" />\n        </SimpleForm>\n    </Edit>\n);\n","import React from 'react';\nimport { List, Datagrid, TextField, DateField, EmailField, Create, Edit, SimpleForm, TextInput, SelectInput, DisabledInput, EditButton } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\n//ArrayField,Create, Edit, SimpleForm, TextInput, DisabledInput,SelectField\n\nexport const UserList = props => (\n    <List filters={<SearchFilter />}{...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"fullName\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"number\" />\n            <TextField source=\"role\" />\n            <DateField source=\"createdAt\" />\n            <DateField source=\"updatedAt\" />\n            <EditButton basePath=\"/users\" />\n            {/* <ArrayField source=\"subscribed\">\n                <Datagrid>\n                    <TextField source=\"id\" />\n                    <TextField source=\"name\" />\n                </Datagrid>\n            </ArrayField> */}\n        </Datagrid>\n    </List>\n);\nconst UserTitle = ({ record }) => {\n    return <span>User {record ? `\"${record.fullName}\"` : ''}</span>;\n};\n\n// export const UserCreate = (props) => (\n//     <Create title=\"Create a User\" {...props}>\n//         <SimpleForm>\n//             <TextInput source=\"name\" />\n//             {/* <SelectInput source=\"role\" choices={[\n//                 { id: 'admin', name: 'admin' },\n//                 { id: 'maintainer', name: 'maintainer' },\n//                 { id: 'user', name: 'user' }\n//             ]} optionText={\"name\"} optionValue={\"id\"} /> */}\n//         </SimpleForm>\n//     </Create>\n// );\n\nexport const UserEdit = (props) => (\n    <Edit title={<UserTitle />} {...props}>\n        <SimpleForm>\n            <DisabledInput source=\"id\" />\n            <DisabledInput source=\"fullName\" />\n            <DisabledInput source=\"email\" />\n            <DisabledInput source=\"number\" />\n            <SelectInput source=\"role\" choices={[\n                { id: 'admin', name: 'admin' },\n                { id: 'maintainer', name: 'maintainer' },\n                { id: 'user', name: 'user' }\n            ]} />\n        </SimpleForm>\n    </Edit>\n);\n","import React from 'react';\nimport CardActions from '@material-ui/core/CardActions';\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport { Link } from 'react-router-dom';\nimport { List, Datagrid, TextField, DateField, Create, AutocompleteArrayInput, ReferenceInput, SelectInput, Edit, SimpleForm, TextInput, DisabledInput, EditButton, DeleteButton, ReferenceArrayInput, SelectArrayInput, ChipField, ReferenceArrayField, ShowButton, RichTextField, TabbedForm, FormTab, SingleFieldList, ArrayField, ImageInput, ImageField, required, ReferenceManyField, ReferenceField, Button } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\nimport RichTextInput from 'ra-input-rich-text';\n\n\nconst AddNewCommentButton = ({ record }) => (\n    <Button\n        component={Link}\n        to={`/comments/create?postId=${record.id}`}\n        label=\"Add a comment\"\n    >\n        <ChatBubbleIcon />\n    </Button>\n);\n\nexport const PostList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"title\" sortable={false} />\n            <TextField source=\"reactionsCount\" />\n            <DateField source=\"createdAt\" sortable={false} />\n            <DateField source=\"updatedAt\" sortable={false} />\n            <EditButton basePath=\"/posts\" />\n        </Datagrid>\n    </List>\n);\nconst PostTitle = ({ record }) => {\n    return <span>Post {record ? `\"${record.title}\"` : ''}</span>;\n};\n\nexport const PostCreate = (props) => (\n    <Create title=\"Create a Post\" {...props}>\n        <SimpleForm>\n            <TextInput source=\"title\" validate={required()} />\n            {/* editor */}\n\n            <RichTextInput source=\"body\" toolbar={[\n                [{ 'size': ['small', false, 'large', 'huge'] }],\n                [{ 'font': [] }],\n                [{ 'direction': 'rtl' }],\n                [{ 'align': [] }],\n                ['bold', 'italic', 'underline', 'link', 'blockquote', 'image', 'video']]\n            } />\n\n            <ImageInput source=\"files\" label=\"Background image\" accept=\"image/*\" validate={required()}>\n                <ImageField source=\"src\" title=\"title\" />\n            </ImageInput>\n\n            <ReferenceArrayInput label=\"categories\" reference=\"categories\" source=\"categories\" perPage={100} validate={required()}>\n                <SelectArrayInput >\n                    <ChipField source=\"name\" />\n                </SelectArrayInput>\n            </ReferenceArrayInput>\n\n            <ReferenceArrayInput label=\"tags\" reference=\"hashTags\" source=\"tags\" perPage={100} validate={required()}>\n                <SelectArrayInput >\n                    <ChipField source=\"name\" />\n                </SelectArrayInput>\n            </ReferenceArrayInput>\n\n            <ReferenceInput label=\"source\" source=\"source\" reference=\"sources\" validate={required()}>\n                <SelectInput optionText=\"name\" />\n            </ReferenceInput>\n        </SimpleForm>\n    </Create>\n);\n\nexport const PostEdit = (props) => (\n    <Edit title={<PostTitle />} {...props}>\n\n        <TabbedForm>\n            {/* <FormTab label=\"summary\"> */}\n\n            {/* <ArrayField source=\"categories\">\n                    <SingleFieldList>\n                        <ChipField source=\"name\" />\n                    </SingleFieldList>\n                </ArrayField>\n\n                <ArrayField source=\"tags\">\n                    <SingleFieldList>\n                        <ChipField source=\"name\" />\n                    </SingleFieldList>\n                </ArrayField>\n\n                <ReferenceField label=\"Source\" source=\"source.id\" reference=\"sources\" sortable={false}>\n                    <ChipField source=\"name\" />\n                </ReferenceField> */}\n\n            {/* </FormTab> */}\n            <FormTab label=\"update\">\n                <DisabledInput source=\"id\" />\n                <DisabledInput source=\"reactionsCount\" />\n\n                <TextInput source=\"title\" />\n                <RichTextInput source=\"body\" toolbar={[\n                    [{ 'size': ['small', false, 'large', 'huge'] }],\n                    [{ 'font': [] }],\n                    [{ 'direction': 'rtl' }],\n                    [{ 'align': [] }],\n                    ['bold', 'italic', 'underline', 'link', 'blockquote', 'image', 'video']]\n                } />\n                <ReferenceArrayInput label=\"categories\" reference=\"categories\" source=\"categories\" perPage={100} validate={required()}>\n                    <SelectArrayInput source=\"name\" >\n                        <ChipField source=\"name\" />\n                    </SelectArrayInput>\n                </ReferenceArrayInput>\n\n                <ReferenceArrayInput label=\"tags\" reference=\"hashTags\" source=\"tags\" perPage={100} validate={required()}>\n                    <SelectArrayInput source=\"name\" >\n                        <ChipField source=\"name\" />\n                    </SelectArrayInput>\n                </ReferenceArrayInput>\n\n                <ReferenceInput label=\"source\" source=\"source.id\" reference=\"sources\">\n                    <SelectInput optionText=\"name\" />\n                </ReferenceInput>\n\n                <ImageField source=\"backgroundImage\" title=\"backgroundImage\" />\n\n                <ImageInput source=\"files\" label=\"Background image\" accept=\"image/*\">\n                    <ImageField source=\"src\" title=\"title\" />\n                </ImageInput>\n\n            </FormTab>\n            <FormTab label=\"Comments\">\n                <ReferenceManyField\n                    label=\"Comments\"\n                    reference=\"comments\"\n                    target=\"post.id\"\n                >\n                    <Datagrid rowClick=\"edit\">\n                        <TextField source=\"id\" />\n                        <TextField source=\"body\" sortable={false} />\n                        <ReferenceField label=\"Author Name\" source=\"user.id\" reference=\"users\" sortable={false}>\n                            <ChipField source=\"fullName\" />\n                        </ReferenceField>\n                        <ReferenceField label=\"Author Email\" source=\"user.id\" reference=\"users\" sortable={false}>\n                            <ChipField source=\"email\" />\n                        </ReferenceField>\n                        <ReferenceField label=\"Post\" source=\"post.id\" reference=\"posts\" sortable={false}>\n                            <ChipField source=\"id\" />\n                        </ReferenceField>\n                        <TextField source=\"reports\" sortable={false} />\n                        <DateField source=\"createdAt\" sortable={false} />\n                        <DateField source=\"updatedAt\" sortable={false} />\n                        <EditButton basePath=\"/comments\" />\n                    </Datagrid>\n                </ReferenceManyField>\n                <AddNewCommentButton />\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n","import React from 'react';\nimport CardActions from '@material-ui/core/CardActions';\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport { Link } from 'react-router-dom';\nimport { Button, List, Datagrid, TextField, DateField, Create, Edit, SimpleForm, TextInput, DisabledInput, EditButton, DeleteButton, ReferenceField, ChipField, TabbedForm, FormTab, ReferenceManyField, ReferenceInput, SelectInput } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\nimport { parse } from 'query-string';\n\nconst AddNewReplyButton = ({ record }) => (\n    <Button\n        component={Link}\n        to={`/comments/create?parentId=${record.id}&postId=${record.post.id}`}\n        label=\"Add a Reply\"\n    >\n        <ChatBubbleIcon />\n    </Button>\n);\n\nexport const CommentList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"body\" sortable={false} />\n            <ReferenceField label=\"Post\" source=\"post.id\" reference=\"posts\" sortable={false}>\n                <ChipField source=\"id\" />\n            </ReferenceField>\n            <TextField source=\"reports\"  />\n            <DateField source=\"createdAt\" sortable={false} />\n            <DateField source=\"updatedAt\" sortable={false} />\n        </Datagrid>\n    </List>\n);\nconst CommentTitle = ({ record }) => {\n    return <span>Comment {record ? `\"${record.body}\"` : ''}</span>;\n};\n\nexport const CommentCreate = (props) => {\n\n    const postId = parse(props.location.search).postId;\n    const parentId = parse(props.location.search).parentId || null;\n\n    return (\n        <Create title=\"Create a Comment\" {...props}>\n            <SimpleForm\n                defaultValue={{ postId, parentId }}\n                redirect={`/posts/${postId}/2`}\n            >\n                <DisabledInput source=\"postId\" />\n                <DisabledInput source=\"parentId\" />\n\n                <TextInput source=\"body\" />\n            </SimpleForm>\n        </Create>\n    )\n};\n\nexport const CommentEdit = (props) => (\n    <Edit title={<CommentTitle />} {...props}>\n        <TabbedForm>\n            <FormTab label=\"summary\">\n                <DisabledInput source=\"id\" />\n                <DisabledInput source=\"body\" />\n            </FormTab>\n            <FormTab label=\"replies\">\n                <ReferenceManyField\n                    label=\"replies\"\n                    reference=\"comments\"\n                    target=\"parentId\"\n                >\n                    <Datagrid rowClick=\"edit\">\n                        <TextField source=\"id\" />\n                        <TextField source=\"body\" sortable={false} />\n                        <ReferenceField label=\"Author Name\" source=\"user.id\" reference=\"users\" sortable={false}>\n                            <ChipField source=\"fullName\" />\n                        </ReferenceField>\n                        <ReferenceField label=\"Author Email\" source=\"user.id\" reference=\"users\" sortable={false}>\n                            <ChipField source=\"email\" />\n                        </ReferenceField>\n                        <ReferenceField label=\"Post\" source=\"post.id\" reference=\"posts\" sortable={false}>\n                            <ChipField source=\"id\" />\n                        </ReferenceField>\n                        <TextField source=\"reports\" sortable={false} />\n                        <DateField source=\"createdAt\" sortable={false} />\n                        <DateField source=\"updatedAt\" sortable={false} />\n                        <EditButton basePath=\"/comments\" />\n                    </Datagrid>\n                </ReferenceManyField>\n                <AddNewReplyButton />\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n","import React from 'react';\nimport { List, Datagrid, TextField, ImageInput, ImageField, DateField, Create, Edit, SimpleForm, required, TextInput, DisabledInput, EditButton, DeleteButton, } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\n\nexport const SourceList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"name\" />\n            <DateField source=\"createdAt\" />\n            <DateField source=\"updatedAt\" />\n            <EditButton basePath=\"/sources\" />\n        </Datagrid>\n    </List>\n);\nconst SourceTitle = ({ record }) => {\n    return <span>Source {record ? `\"${record.name}\"` : ''}</span>;\n};\n\nexport const SourceCreate = (props) => (\n    <Create title=\"Create a Source\" {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" validate={required()} />\n            <ImageInput source=\"files\" label=\"Background image\" accept=\"image/*\" validate={required()}>\n                <ImageField source=\"src\" title=\"title\" />\n            </ImageInput>\n        </SimpleForm>\n    </Create>\n);\n\nexport const SourceEdit = (props) => (\n    <Edit title={<SourceTitle />} {...props}>\n        <SimpleForm>\n            <DisabledInput source=\"id\" />\n            <TextInput source=\"name\" />\n            <ImageField source=\"backgroundImage\" title=\"backgroundImage\" />\n            <ImageInput source=\"files\" label=\"Background image\" accept=\"image/*\" validate={required()}>\n                <ImageField source=\"src\" title=\"title\" />\n            </ImageInput>\n        </SimpleForm>\n    </Edit>\n);\n","import React from 'react';\nimport { List, Datagrid, TextField, FileInput, FileField, DateField, Create, Edit, required, SimpleForm, TextInput, DisabledInput, EditButton, DeleteButton, } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\n\nexport const UploaderList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <FileField source=\"url\" />\n            <DateField source=\"createdAt\" />\n            <DateField source=\"updatedAt\" />\n            <EditButton basePath=\"/uploads\" />\n        </Datagrid>\n    </List>\n);\nconst UploaderTitle = ({ record }) => {\n    return <span>Uploader {record ? `\"${record.url}\"` : ''}</span>;\n};\n\nexport const UploaderCreate = (props) => (\n    <Create title=\"Create a Uploader\" {...props}>\n        <SimpleForm>\n            <FileInput source=\"files\" label=\"upload video\" accept=\"video/*\" validate={required()} >\n                <FileField source=\"src\" />\n            </FileInput>\n        </SimpleForm>\n    </Create>\n);\n\nexport const UploaderEdit = (props) => (\n    <Edit title={<UploaderTitle />} {...props}>\n        <SimpleForm>\n            <DisabledInput source=\"id\" />\n            <TextInput source=\"url\" />\n        </SimpleForm>\n    </Edit>\n);\n","import React from 'react';\nimport { List, Datagrid, TextField, DateField, Create, Edit, SimpleForm, TextInput, DisabledInput, EditButton, DeleteButton, ReferenceArrayInput, SelectArrayInput, ChipField, ReferenceArrayField, ShowButton, RichTextField, TabbedForm, FormTab, SingleFieldList, ArrayField, ImageInput, ImageField, required, ReferenceManyField, ReferenceField, Button } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\n\nexport const NotificationList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid >\n            <TextField source=\"id\" />\n            <TextField source=\"title\" sortable={false} />\n            <TextField source=\"body\" sortable={false} />\n            <DateField source=\"createdAt\" sortable={false} />\n            <DateField source=\"updatedAt\" sortable={false} />\n        </Datagrid>\n    </List>\n);\n\nexport const NotificationCreate = (props) => (\n    <Create title=\"Create a Notification\" {...props}>\n        <SimpleForm>\n            <TextInput source=\"title\" validate={required()} />\n            <TextInput source=\"body\" validate={required()} />\n            <ReferenceArrayInput label=\"categories\" reference=\"categories\" source=\"categories\" perPage={100} validate={required()}>\n                <SelectArrayInput >\n                    <ChipField source=\"name\" />\n                </SelectArrayInput>\n            </ReferenceArrayInput>\n        </SimpleForm>\n    </Create>\n);","import React from 'react';\nimport { Admin, Resource } from 'react-admin';\n/* icons start*/\nimport PostIcon from '@material-ui/icons/Book';\nimport UserIcon from '@material-ui/icons/People';\nimport ListIcon from '@material-ui/icons/LibraryBooks';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport ReportIcon from '@material-ui/icons/Report';\nimport SourceIcon from '@material-ui/icons/Apps';\nimport FileUpload from '@material-ui/icons/FileUpload';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n/* icons end */\n\n/* rest providers & auth start*/\nimport dataProvider from './dataProvider/dataProvider';\nimport authProvider from './auth/authProvider';\n/* rest providers & auth end*/\n\n/* dashboard modules start */\nimport { CategoryList, CategoryCreate, CategoryEdit } from './category/categories';\nimport { HashTagList, HashTagCreate, HashTagEdit } from './hashTag/hashTags';\nimport { UserList, UserEdit } from './user/user';\nimport { PostList, PostCreate, PostEdit } from './post/post';\nimport { CommentList, CommentEdit, CommentCreate } from './comment/comment';\nimport { SourceList, SourceEdit, SourceCreate } from './source/source';\nimport { UploaderList, UploaderCreate, UploaderEdit } from './uploader/uploader';\nimport { NotificationList, NotificationCreate } from './notification/notification';\n/* dashboard modules end */\n\nconst App = () => (\n  <Admin authProvider={authProvider} dataProvider={dataProvider}>\n    {permissions => [\n      permissions === 'admin'\n        ? <Resource name=\"users\" list={UserList} edit={UserEdit} icon={UserIcon} />\n        : null,\n      <Resource name=\"categories\" list={CategoryList} create={CategoryCreate} edit={CategoryEdit} />,\n      <Resource name=\"hashTags\" list={HashTagList} create={HashTagCreate} edit={HashTagEdit} icon={ListIcon} />,\n      <Resource name=\"posts\" list={PostList} create={PostCreate} edit={PostEdit} icon={PostIcon} />,\n      <Resource name=\"comments\" list={CommentList} create={CommentCreate} edit={CommentEdit} icon={CommentIcon} />,\n      <Resource name=\"sources\" list={SourceList} create={SourceCreate} edit={SourceEdit} icon={SourceIcon} />,\n      <Resource name=\"uploads\" list={UploaderList} create={UploaderCreate} edit={UploaderEdit} icon={FileUpload} />,\n      <Resource name=\"notifications\" list={NotificationList} create={NotificationCreate} icon={NotificationsIcon} />\n\n    ]}\n\n  </Admin>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}