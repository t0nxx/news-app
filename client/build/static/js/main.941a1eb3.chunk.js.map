{"version":3,"sources":["dataProvider/dataProvider.js","auth/authProvider.js","shared/serachFilter.js","category/categories.js","hashTag/hashTags.js","user/user.js","post/post.js","comment/comment.js","App.js","serviceWorker.js","index.js"],"names":["apiUrl","dataProvider","type","resource","params","url","token","localStorage","getItem","options","headers","Headers","Accept","Content-Type","Authorization","GET_LIST","_params$pagination","pagination","page","perPage","_params$sort","sort","field","order","query","limit","filter","sortField","console","log","concat","stringify","GET_MANY","GET_MANY_REFERENCE","target","id","GET_ONE","CREATE","_params$data","data","title","body","files","categories","tags","payload","FormData","append","i","length","rawFile","delete","method","JSON","UPDATE","DELETE","Error","fetch","then","res","json","total","count","Object","objectSpread","authProvider","AUTH_LOGIN","username","password","request","Request","email","response","status","statusText","_ref","setItem","role","AUTH_LOGOUT","removeItem","Promise","resolve","AUTH_CHECK","reject","AUTH_GET_PERMISSIONS","AUTH_ERROR","SearchFilter","props","react_default","a","createElement","Filter","TextInput","label","source","alwaysOn","SelectInput","optionText","CategoryList","List","assign","filters","serachFilter_SearchFilter","Datagrid","rowClick","TextField","DateField","EditButton","basePath","CategoryTitle","record","name","CategoryCreate","Create","SimpleForm","CategoryEdit","Edit","categories_CategoryTitle","DisabledInput","HashTagList","HashTagTitle","HashTagCreate","HashTagEdit","hashTags_HashTagTitle","UserList","EmailField","UserTitle","fullName","UserEdit","user_UserTitle","choices","AddNewCommentButton","Button","component","Link","to","ChatBubble_default","PostList","sortable","PostTitle","_ref2","PostCreate","validate","required","esm","toolbar","size","font","direction","align","ImageInput","accept","multiple","ImageField","ReferenceArrayInput","reference","SelectArrayInput","ChipField","PostEdit","post_PostTitle","TabbedForm","FormTab","RichTextField","ArrayField","SingleFieldList","ReferenceManyField","ReferenceField","post_AddNewCommentButton","AddNewReplyButton","post","CommentList","CommentTitle","CommentCreate","postId","parse","location","search","parentId","defaultValue","redirect","CommentEdit","comment_CommentTitle","comment_AddNewReplyButton","App","Admin","permissions","Resource","list","edit","icon","UserIcon","create","ListIcon","PostIcon","CommentIcon","ReportIcon","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kVAWMA,EAAS,wBAGAC,EAAA,SAACC,EAAMC,EAAUC,GAC5B,IAAIC,EAAM,GACJC,EAAQC,aAAaC,QAAQ,SAC/BC,EAAU,CACVC,QAAS,IAAIC,QAAQ,CACjBC,OAAQ,mBACRC,eAAgB,mBAChBC,cAAeR,KAGvB,OAAQJ,GACJ,KAAKa,IAAU,IAAAC,EACeZ,EAAOa,WAAzBC,EADGF,EACHE,KAAMC,EADHH,EACGG,QADHC,EAEchB,EAAOiB,KAAxBC,EAFGF,EAEHE,MAAOC,EAFJH,EAEIG,MACTC,EAAQ,CACVN,KAAMA,EACNO,MAAON,EACPK,MAAOpB,EAAOsB,OAAOF,MACrBD,MAAOA,EACPI,UAAWL,GAEfM,QAAQC,IAAIzB,GACZC,EAAG,GAAAyB,OAAM9B,EAAN,KAAA8B,OAAgB3B,EAAhB,KAAA2B,OAA4BC,oBAAUP,IACzC,MAEJ,KAAKQ,IACDJ,QAAQC,IAAI,QACZD,QAAQC,IAAIzB,GACZC,EAAG,GAAAyB,OAAM9B,EAAN,KAAA8B,OAAgB3B,GACnB,MACJ,KAAK8B,IACDL,QAAQC,IAAI,SACZD,QAAQC,IAAIzB,GAERC,EADiB,YAAjBD,EAAO8B,OACJ,GAAAJ,OAAM9B,EAAN,KAAA8B,OAAgB3B,EAAhB,cAAA2B,OAAqC1B,EAAO+B,IAE5C,GAAAL,OAAM9B,EAAN,KAAA8B,OAAgB3B,EAAhB,YAAA2B,OAAmC1B,EAAO+B,IAEjD,MACJ,KAAKC,IACD/B,EAAG,GAAAyB,OAAM9B,EAAN,KAAA8B,OAAgB3B,EAAhB,YAAA2B,OAAmC1B,EAAO+B,IAC7C,MACJ,KAAKE,IAED,GAAgB,SAAZlC,EAAqB,KAAAmC,EAC4BlC,EAAOmC,KAAhDC,EADaF,EACbE,MAAOC,EADMH,EACNG,KAAMC,EADAJ,EACAI,MAAOC,EADPL,EACOK,WAAYC,EADnBN,EACmBM,KAElCC,EAAU,IAAIC,SAGpB,GAFAD,EAAQE,OAAO,QAASP,GACxBK,EAAQE,OAAO,OAAQN,GACnBE,EACA,IAAK,IAAIK,EAAI,EAAGA,EAAIL,EAAWM,OAAQD,IACnCH,EAAQE,OAAO,aAAcJ,EAAWK,IAGhD,GAAIJ,EACA,IAAK,IAAII,EAAI,EAAGA,EAAIJ,EAAKK,OAAQD,IAC7BH,EAAQE,OAAO,OAAQH,EAAKI,IAGpC,GAAIN,EACA,IAAK,IAAIM,EAAI,EAAGA,EAAIN,EAAMO,OAAQD,IAC9BH,EAAQE,OAAO,QAASL,EAAMM,GAAGE,SAGzC7C,EAAG,GAAAyB,OAAM9B,EAAN,KAAA8B,OAAgB3B,EAAhB,QACHM,EAAQC,QAAQyC,OAAO,gBACvB1C,EAAQ2C,OAAS,OACjB3C,EAAQgC,KAAOI,OAGfxC,EAAG,GAAAyB,OAAM9B,EAAN,KAAA8B,OAAgB3B,EAAhB,QACHM,EAAQ2C,OAAS,OACjB3C,EAAQgC,KAAOY,KAAKtB,UAAU3B,EAAOmC,MAGzC,MACJ,KAAKe,IACDjD,EAAG,GAAAyB,OAAM9B,EAAN,KAAA8B,OAAgB3B,EAAhB,YAAA2B,OAAmC1B,EAAO+B,IAC5B,UAAbhC,IACAE,EAAG,GAAAyB,OAAM9B,EAAN,KAAA8B,OAAgB3B,EAAhB,aAAA2B,OAAoC1B,EAAO+B,KAGlD1B,EAAQ2C,OAAS,MACjB3C,EAAQgC,KAAOY,KAAKtB,UAAU3B,EAAOmC,MACrC,MACJ,KAAKgB,IACDlD,EAAG,GAAAyB,OAAM9B,EAAN,KAAA8B,OAAgB3B,EAAhB,YAAA2B,OAAmC1B,EAAO+B,IAC7C1B,EAAQ2C,OAAS,SACjB,MACJ,QACI,MAAM,IAAII,MAAJ,0CAAA1B,OAAoD5B,IAGlE,OAAOuD,MAAMpD,EAAKI,GACbiD,KAAK,SAAAC,GACF,OAAOA,EAAIC,SAEdF,KAAK,SAAAE,GACF,OAAQ1D,GACJ,KAAKa,IACL,KAAKkB,IAED,OADAL,QAAQC,IAAI+B,GACL,CACHrB,KAAMqB,EAAKrB,KACXsB,MAAOD,EAAKE,OAEpB,KAAKzB,IAED,OADAT,QAAQC,IAAI+B,GACL,CAAErB,KAAKwB,OAAAC,EAAA,EAAAD,CAAA,GAAM3D,EAAOmC,KAAd,CAAoBJ,GAAIyB,EAAKrB,KAAKJ,MACnD,KAAKC,IAGL,KAAKkB,IAGL,KAAKC,IAED,OADA3B,QAAQC,IAAI+B,GACL,CAAErB,KAAMqB,EAAKrB,MACxB,QACI,MAAO,CAAEA,KAAMqB,EAAKrB,mBClIzB0B,EAAA,SAAC/D,EAAME,GAClB,GAAIF,IAASgE,IAAY,KACbC,EAAuB/D,EAAvB+D,SAAUC,EAAahE,EAAbgE,SACZC,EAAU,IAAIC,QAAJ,GAAAxC,OAJP,wBAIO,qBAA4C,CACxDsB,OAAQ,OACRX,KAAMY,KAAKtB,UAAU,CAAEwC,MAAOJ,EAAUC,aACxC1D,QAAS,IAAIC,QAAQ,CAAEE,eAAgB,uBAE3C,OAAO4C,MAAMY,GACRX,KAAK,SAAAc,GACF,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAC5C,MAAM,IAAIjB,MAAMgB,EAASE,YAE7B,OAAOF,EAASZ,SAEnBF,KAAK,SAAAiB,GAAqB,IAAlBpC,EAAkBoC,EAAlBpC,KAAMjC,EAAYqE,EAAZrE,MACXC,aAAaqE,QAAQ,QAAStE,GAC9BC,aAAaqE,QAAQ,OAAQrC,EAAKsC,QAG9C,GAAI3E,IAAS4E,IAGT,OAFAvE,aAAawE,WAAW,SACxBxE,aAAawE,WAAW,QACjBC,QAAQC,UAGnB,GAAI/E,IAASgF,IACT,OAAO3E,aAAaC,QAAQ,SAAWwE,QAAQC,UAAYD,QAAQG,SAEvE,GAAIjF,IAASkF,IAAsB,CAC/B,IAAMP,EAAOtE,aAAaC,QAAQ,QAClC,OAAOqE,EAAOG,QAAQC,QAAQJ,GAAQG,QAAQG,SAErCE,sHClCJC,EAAe,SAACC,GAAD,OACxBC,EAAAC,EAAAC,cAACC,EAAA,EAAWJ,EACRC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWC,MAAM,SAASC,OAAO,QAAQC,UAAQ,IACjDP,EAAAC,EAAAC,cAAEM,EAAA,EAAF,CAAcC,WAAW,WCFpBC,EAAe,SAAAX,GAAK,OAC7BC,EAAAC,EAAAC,cAACS,EAAA,EAADpC,OAAAqC,OAAA,CAAMC,QAASb,EAAAC,EAAAC,cAACY,EAAD,OAAsBf,GACjCC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,SAAS,QACfhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,OAClBN,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,SAClBN,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,OAAO,cAClBN,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,OAAO,cAClBN,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYC,SAAS,mBAI3BC,EAAgB,SAAAlC,GAAgB,IAAbmC,EAAanC,EAAbmC,OACrB,OAAOtB,EAAAC,EAAAC,cAAA,wBAAgBoB,EAAM,IAAAhF,OAAOgF,EAAOC,KAAd,KAAwB,KAG5CC,EAAiB,SAACzB,GAAD,OAC1BC,EAAAC,EAAAC,cAACuB,EAAA,EAADlD,OAAAqC,OAAA,CAAQ5D,MAAM,qBAAwB+C,GAClCC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACI1B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWE,OAAO,YAKjBqB,EAAe,SAAC5B,GAAD,OACxBC,EAAAC,EAAAC,cAAC0B,EAAA,EAADrD,OAAAqC,OAAA,CAAM5D,MAAOgD,EAAAC,EAAAC,cAAC2B,EAAD,OAAuB9B,GAChCC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACI1B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAexB,OAAO,OACtBN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWE,OAAO,YC3BjByB,EAAc,SAAAhC,GAAK,OAC5BC,EAAAC,EAAAC,cAACS,EAAA,EAADpC,OAAAqC,OAAA,CAAMC,QAASb,EAAAC,EAAAC,cAACY,EAAD,OAAsBf,GACjCC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,SAAS,QACfhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,OAClBN,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,SAClBN,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,OAAO,cAClBN,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,OAAO,cAClBN,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYC,SAAS,iBAI3BY,EAAe,SAAA7C,GAAgB,IAAbmC,EAAanC,EAAbmC,OACpB,OAAOtB,EAAAC,EAAAC,cAAA,uBAAeoB,EAAM,IAAAhF,OAAOgF,EAAOC,KAAd,KAAwB,KAG3CU,EAAgB,SAAClC,GAAD,OACzBC,EAAAC,EAAAC,cAACuB,EAAA,EAADlD,OAAAqC,OAAA,CAAQ5D,MAAM,oBAAuB+C,GACjCC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACI1B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWE,OAAO,YAKjB4B,EAAc,SAACnC,GAAD,OACvBC,EAAAC,EAAAC,cAAC0B,EAAA,EAADrD,OAAAqC,OAAA,CAAM5D,MAAOgD,EAAAC,EAAAC,cAACiC,EAAD,OAAsBpC,GAC/BC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACI1B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAexB,OAAO,OACtBN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWE,OAAO,qBC1BjB8B,EAAW,SAAArC,GAAK,OACzBC,EAAAC,EAAAC,cAACS,EAAA,EAADpC,OAAAqC,OAAA,CAAMC,QAASb,EAAAC,EAAAC,cAACY,EAAD,OAAqBf,GAChCC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,SAAS,QACfhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,OAClBN,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,aAClBN,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAY/B,OAAO,UACnBN,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,WAClBN,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,SAClBN,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,OAAO,cAClBN,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,OAAO,cAClBN,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYC,SAAS,cAU3BkB,EAAY,SAAAnD,GAAgB,IAAbmC,EAAanC,EAAbmC,OACjB,OAAOtB,EAAAC,EAAAC,cAAA,oBAAYoB,EAAM,IAAAhF,OAAOgF,EAAOiB,SAAd,KAA4B,KAgB5CC,EAAW,SAACzC,GAAD,OACpBC,EAAAC,EAAAC,cAAC0B,EAAA,EAADrD,OAAAqC,OAAA,CAAM5D,MAAOgD,EAAAC,EAAAC,cAACuC,EAAD,OAAmB1C,GAC5BC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACI1B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAexB,OAAO,OACtBN,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAexB,OAAO,aACtBN,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAexB,OAAO,UACtBN,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAexB,OAAO,WACtBN,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAaF,OAAO,OAAOoC,QAAS,CAChC,CAAE/F,GAAI,QAAS4E,KAAM,SACrB,CAAE5E,GAAI,aAAc4E,KAAM,cAC1B,CAAE5E,GAAI,OAAQ4E,KAAM,sMC3C9BoB,GAAsB,SAAAxD,GAAA,IAAGmC,EAAHnC,EAAGmC,OAAH,OACxBtB,EAAAC,EAAAC,cAAC0C,GAAA,EAAD,CACIC,UAAWC,IACXC,GAAE,2BAAAzG,OAA6BgF,EAAO3E,IACtC0D,MAAM,iBAENL,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,QAIKgD,GAAW,SAAAlD,GAAK,OACzBC,EAAAC,EAAAC,cAACS,EAAA,EAADpC,OAAAqC,OAAA,CAAMC,QAASb,EAAAC,EAAAC,cAACY,EAAD,OAAsBf,GACjCC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,SAAS,QACfhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,OAClBN,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,QAAQ4C,UAAU,IACpClD,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,iBAAiB4C,UAAU,IAC7ClD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,OAAO,YAAY4C,UAAU,IACxClD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,OAAO,YAAY4C,UAAU,IACxClD,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYC,SAAS,cAI3B+B,GAAY,SAAAC,GAAgB,IAAb9B,EAAa8B,EAAb9B,OACjB,OAAOtB,EAAAC,EAAAC,cAAA,oBAAYoB,EAAM,IAAAhF,OAAOgF,EAAOtE,MAAd,KAAyB,KAGzCqG,GAAa,SAACtD,GAAD,OACtBC,EAAAC,EAAAC,cAACuB,EAAA,EAADlD,OAAAqC,OAAA,CAAQ5D,MAAM,iBAAoB+C,GAC9BC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACI1B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWE,OAAO,QAAQgD,SAAUC,iBAGpCvD,EAAAC,EAAAC,cAACsD,GAAA,EAAD,CAAelD,OAAO,OAAOmD,QAAS,CAClC,CAAC,CAAEC,KAAQ,CAAC,SAAS,EAAO,QAAS,UACrC,CAAC,CAAEC,KAAQ,KACX,CAAC,CAAEC,UAAa,QAChB,CAAC,CAAEC,MAAS,KACZ,CAAC,OAAQ,SAAU,YAAa,OAAQ,aAAc,YAG1D7D,EAAAC,EAAAC,cAAC4D,GAAA,EAAD,CAAYxD,OAAO,QAAQD,MAAM,mDAAmD0D,OAAO,UAAUC,UAAQ,GACzGhE,EAAAC,EAAAC,cAAC+D,GAAA,EAAD,CAAY3D,OAAO,MAAMtD,MAAM,WAGnCgD,EAAAC,EAAAC,cAACgE,GAAA,EAAD,CAAqB7D,MAAM,aAAa8D,UAAU,aAAa7D,OAAO,aAAa3E,QAAS,IAAK2H,SAAUC,gBACvGvD,EAAAC,EAAAC,cAACkE,GAAA,EAAD,KACIpE,EAAAC,EAAAC,cAACmE,GAAA,EAAD,CAAW/D,OAAO,WAI1BN,EAAAC,EAAAC,cAACgE,GAAA,EAAD,CAAqB7D,MAAM,OAAO8D,UAAU,WAAW7D,OAAO,OAAO3E,QAAS,IAAK2H,SAAUC,gBACzFvD,EAAAC,EAAAC,cAACkE,GAAA,EAAD,KACIpE,EAAAC,EAAAC,cAACmE,GAAA,EAAD,CAAW/D,OAAO,cAOzBgE,GAAW,SAACvE,GAAD,OACpBC,EAAAC,EAAAC,cAAC0B,EAAA,EAADrD,OAAAqC,OAAA,CAAM5D,MAAOgD,EAAAC,EAAAC,cAACqE,GAAD,OAAmBxE,GAE5BC,EAAAC,EAAAC,cAACsE,GAAA,EAAD,KACIxE,EAAAC,EAAAC,cAACuE,GAAA,EAAD,CAASpE,MAAM,WACXL,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAexB,OAAO,OACtBN,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAexB,OAAO,UACtBN,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAexB,OAAO,mBACtBN,EAAAC,EAAAC,cAACwE,GAAA,EAAD,CAAepE,OAAO,SACtBN,EAAAC,EAAAC,cAAC+D,GAAA,EAAD,CAAY3D,OAAO,kBAAkBtD,MAAM,oBAE3CgD,EAAAC,EAAAC,cAACyE,GAAA,EAAD,CAAYrE,OAAO,cACfN,EAAAC,EAAAC,cAAC0E,GAAA,EAAD,KACI5E,EAAAC,EAAAC,cAACmE,GAAA,EAAD,CAAW/D,OAAO,WAI1BN,EAAAC,EAAAC,cAACyE,GAAA,EAAD,CAAYrE,OAAO,QACfN,EAAAC,EAAAC,cAAC0E,GAAA,EAAD,KACI5E,EAAAC,EAAAC,cAACmE,GAAA,EAAD,CAAW/D,OAAO,YAK9BN,EAAAC,EAAAC,cAACuE,GAAA,EAAD,CAASpE,MAAM,UACXL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWE,OAAO,UAClBN,EAAAC,EAAAC,cAACsD,GAAA,EAAD,CAAelD,OAAO,OAAOmD,QAAS,CAClC,CAAC,CAAEC,KAAQ,CAAC,SAAS,EAAO,QAAS,UACrC,CAAC,CAAEC,KAAQ,KACX,CAAC,CAAEC,UAAa,QAChB,CAAC,CAAEC,MAAS,KACZ,CAAC,OAAQ,SAAU,YAAa,OAAQ,aAAc,YAE1D7D,EAAAC,EAAAC,cAACgE,GAAA,EAAD,CAAqB7D,MAAM,aAAa8D,UAAU,aAAa7D,OAAO,aAAa3E,QAAS,IAAK2H,SAAUC,gBACvGvD,EAAAC,EAAAC,cAACkE,GAAA,EAAD,CAAkB9D,OAAO,QACrBN,EAAAC,EAAAC,cAACmE,GAAA,EAAD,CAAW/D,OAAO,WAI1BN,EAAAC,EAAAC,cAACgE,GAAA,EAAD,CAAqB7D,MAAM,OAAO8D,UAAU,WAAW7D,OAAO,OAAO3E,QAAS,IAAK2H,SAAUC,gBACzFvD,EAAAC,EAAAC,cAACkE,GAAA,EAAD,KACIpE,EAAAC,EAAAC,cAACmE,GAAA,EAAD,CAAW/D,OAAO,YAI9BN,EAAAC,EAAAC,cAACuE,GAAA,EAAD,CAASpE,MAAM,YACXL,EAAAC,EAAAC,cAAC2E,GAAA,EAAD,CACIxE,MAAM,WACN8D,UAAU,WACVzH,OAAO,WAEPsD,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,SAAS,QACfhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,OAClBN,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,OAAO4C,UAAU,IACnClD,EAAAC,EAAAC,cAAC4E,GAAA,EAAD,CAAgBzE,MAAM,cAAcC,OAAO,UAAU6D,UAAU,QAAQjB,UAAU,GAC7ElD,EAAAC,EAAAC,cAACmE,GAAA,EAAD,CAAW/D,OAAO,cAEtBN,EAAAC,EAAAC,cAAC4E,GAAA,EAAD,CAAgBzE,MAAM,eAAeC,OAAO,UAAU6D,UAAU,QAAQjB,UAAU,GAC9ElD,EAAAC,EAAAC,cAACmE,GAAA,EAAD,CAAW/D,OAAO,WAEtBN,EAAAC,EAAAC,cAAC4E,GAAA,EAAD,CAAgBzE,MAAM,OAAOC,OAAO,UAAU6D,UAAU,QAAQjB,UAAU,GACtElD,EAAAC,EAAAC,cAACmE,GAAA,EAAD,CAAW/D,OAAO,QAEtBN,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,UAAU4C,UAAU,IACtClD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,OAAO,YAAY4C,UAAU,IACxClD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,OAAO,YAAY4C,UAAU,IACxClD,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYC,SAAS,gBAG7BpB,EAAAC,EAAAC,cAAC6E,GAAD,UCjIVC,GAAoB,SAAA7F,GAAA,IAAGmC,EAAHnC,EAAGmC,OAAH,OACtBtB,EAAAC,EAAAC,cAAC0C,GAAA,EAAD,CACIC,UAAWC,IACXC,GAAE,6BAAAzG,OAA+BgF,EAAO3E,GAAtC,YAAAL,OAAmDgF,EAAO2D,KAAKtI,IACjE0D,MAAM,eAENL,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,QAIKiF,GAAc,SAAAnF,GAAK,OAC5BC,EAAAC,EAAAC,cAACS,EAAA,EAADpC,OAAAqC,OAAA,CAAMC,QAASb,EAAAC,EAAAC,cAACY,EAAD,OAAsBf,GACjCC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,SAAS,QACfhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,OAClBN,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,OAAO4C,UAAU,IACnClD,EAAAC,EAAAC,cAAC4E,GAAA,EAAD,CAAgBzE,MAAM,OAAOC,OAAO,UAAU6D,UAAU,QAAQjB,UAAU,GACtElD,EAAAC,EAAAC,cAACmE,GAAA,EAAD,CAAW/D,OAAO,QAEtBN,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,UAAU4C,UAAU,IACtClD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,OAAO,YAAY4C,UAAU,IACxClD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,OAAO,YAAY4C,UAAU,OAI9CiC,GAAe,SAAA/B,GAAgB,IAAb9B,EAAa8B,EAAb9B,OACpB,OAAOtB,EAAAC,EAAAC,cAAA,uBAAeoB,EAAM,IAAAhF,OAAOgF,EAAOrE,KAAd,KAAwB,KAG3CmI,GAAgB,SAACrF,GAE1B,IAAMsF,EAASC,gBAAMvF,EAAMwF,SAASC,QAAQH,OACtCI,EAAWH,gBAAMvF,EAAMwF,SAASC,QAAQC,UAAY,KAE1D,OACIzF,EAAAC,EAAAC,cAACuB,EAAA,EAADlD,OAAAqC,OAAA,CAAQ5D,MAAM,oBAAuB+C,GACjCC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACIgE,aAAc,CAAEL,SAAQI,YACxBE,SAAQ,UAAArJ,OAAY+I,EAAZ,OAERrF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAexB,OAAO,WACtBN,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAexB,OAAO,aAEtBN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWE,OAAO,YAMrBsF,GAAc,SAAC7F,GAAD,OACvBC,EAAAC,EAAAC,cAAC0B,EAAA,EAADrD,OAAAqC,OAAA,CAAM5D,MAAOgD,EAAAC,EAAAC,cAAC2F,GAAD,OAAsB9F,GAC/BC,EAAAC,EAAAC,cAACsE,GAAA,EAAD,KACIxE,EAAAC,EAAAC,cAACuE,GAAA,EAAD,CAASpE,MAAM,WACXL,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAexB,OAAO,OACtBN,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAexB,OAAO,UAE1BN,EAAAC,EAAAC,cAACuE,GAAA,EAAD,CAASpE,MAAM,WACXL,EAAAC,EAAAC,cAAC2E,GAAA,EAAD,CACIxE,MAAM,UACN8D,UAAU,WACVzH,OAAO,YAEPsD,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,SAAS,QACfhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,OAClBN,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,OAAO4C,UAAU,IACnClD,EAAAC,EAAAC,cAAC4E,GAAA,EAAD,CAAgBzE,MAAM,cAAcC,OAAO,UAAU6D,UAAU,QAAQjB,UAAU,GAC7ElD,EAAAC,EAAAC,cAACmE,GAAA,EAAD,CAAW/D,OAAO,cAEtBN,EAAAC,EAAAC,cAAC4E,GAAA,EAAD,CAAgBzE,MAAM,eAAeC,OAAO,UAAU6D,UAAU,QAAQjB,UAAU,GAC9ElD,EAAAC,EAAAC,cAACmE,GAAA,EAAD,CAAW/D,OAAO,WAEtBN,EAAAC,EAAAC,cAAC4E,GAAA,EAAD,CAAgBzE,MAAM,OAAOC,OAAO,UAAU6D,UAAU,QAAQjB,UAAU,GACtElD,EAAAC,EAAAC,cAACmE,GAAA,EAAD,CAAW/D,OAAO,QAEtBN,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAWX,OAAO,UAAU4C,UAAU,IACtClD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,OAAO,YAAY4C,UAAU,IACxClD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAWZ,OAAO,YAAY4C,UAAU,IACxClD,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAYC,SAAS,gBAG7BpB,EAAAC,EAAAC,cAAC4F,GAAD,UC/CDC,GAjBH,kBACV/F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAOvH,aAAcA,EAAchE,aAAcA,GAC9C,SAAAwL,GAAW,MAAI,CACE,UAAhBA,EACIjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAU3E,KAAK,QAAQ4E,KAAM/D,EAAUgE,KAAM5D,EAAU6D,KAAMC,MAC7D,KACJtG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAU3E,KAAK,aAAa4E,KAAMzF,EAAc6F,OAAQ/E,EAAgB4E,KAAMzE,IAC9E3B,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAU3E,KAAK,WAAW4E,KAAMpE,EAAawE,OAAQtE,EAAemE,KAAMlE,EAAamE,KAAMG,MAC7FxG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAU3E,KAAK,QAAQ4E,KAAMlD,GAAUsD,OAAQlD,GAAY+C,KAAM9B,GAAU+B,KAAMI,MACjFzG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAU3E,KAAK,WAAW4E,KAAMjB,GAAaqB,OAAQnB,GAAegB,KAAMR,GAAaS,KAAMK,MAC7F1G,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAU3E,KAAK,UAAU8E,KAAMM,UCrBjBC,QACW,cAA7BC,OAAOtB,SAASuB,UAEe,UAA7BD,OAAOtB,SAASuB,UAEhBD,OAAOtB,SAASuB,SAASC,MACvB,2DCZNC,IAASC,OAAOjH,EAAAC,EAAAC,cAACgH,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrJ,KAAK,SAAAsJ,GACjCA,EAAaC","file":"static/js/main.941a1eb3.chunk.js","sourcesContent":["import { stringify } from 'query-string';\nimport {\n    GET_LIST,\n    GET_ONE,\n    CREATE,\n    UPDATE,\n    DELETE,\n    GET_MANY_REFERENCE,\n    GET_MANY\n} from 'react-admin';\n\nconst apiUrl = 'http://localhost:3001';\n// const apiUrl = 'http://ec2-35-168-9-164.compute-1.amazonaws.com:3001';\n\nexport default (type, resource, params) => {\n    let url = '';\n    const token = localStorage.getItem('token');\n    let options = {\n        headers: new Headers({\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: token\n        }),\n    };\n    switch (type) {\n        case GET_LIST: {\n            const { page, perPage } = params.pagination;\n            const { field, order } = params.sort;\n            const query = {\n                page: page,\n                limit: perPage,\n                query: params.filter.query,\n                order: order,\n                sortField: field\n            };\n            console.log(params);\n            url = `${apiUrl}/${resource}?${stringify(query)}`;\n            break;\n        }\n        case GET_MANY:\n            console.log('many');\n            console.log(params);\n            url = `${apiUrl}/${resource}`;\n            break;\n        case GET_MANY_REFERENCE:\n            console.log('refre');\n            console.log(params);\n            if (params.target == 'parentId') { /* refrence is itself */\n                url = `${apiUrl}/${resource}?parentId=${params.id}`;\n            } else {\n                url = `${apiUrl}/${resource}?postId=${params.id}`;\n            }\n            break;\n        case GET_ONE:\n            url = `${apiUrl}/${resource}/getOne/${params.id}`;\n            break;\n        case CREATE:\n            /* post controll */\n            if (resource == 'posts') {\n                const { title, body, files, categories, tags } = params.data;\n\n                const payload = new FormData();\n                payload.append('title', title);\n                payload.append('body', body);\n                if (categories) {\n                    for (let i = 0; i < categories.length; i++) {\n                        payload.append('categories', categories[i]);\n                    }\n                }\n                if (tags) {\n                    for (let i = 0; i < tags.length; i++) {\n                        payload.append('tags', tags[i]);\n                    }\n                }\n                if (files) {\n                    for (let i = 0; i < files.length; i++) {\n                        payload.append('files', files[i].rawFile);\n                    }\n                }\n                url = `${apiUrl}/${resource}/new`;\n                options.headers.delete('Content-Type');\n                options.method = 'POST';\n                options.body = payload;\n            } else {\n                /* any not post controll */\n                url = `${apiUrl}/${resource}/new`;\n                options.method = 'POST';\n                options.body = JSON.stringify(params.data);\n\n            }\n            break;\n        case UPDATE:\n            url = `${apiUrl}/${resource}/update/${params.id}`;\n            if (resource === 'users') {\n                url = `${apiUrl}/${resource}/promote/${params.id}`;\n            }\n\n            options.method = 'PUT';\n            options.body = JSON.stringify(params.data);\n            break;\n        case DELETE:\n            url = `${apiUrl}/${resource}/delete/${params.id}`;\n            options.method = 'DELETE';\n            break;\n        default:\n            throw new Error(`Unsupported Data Provider request type ${type}`);\n    }\n    // let headers;\n    return fetch(url, options)\n        .then(res => {\n            return res.json();\n        })\n        .then(json => {\n            switch (type) {\n                case GET_LIST:\n                case GET_MANY_REFERENCE:\n                    console.log(json);\n                    return {\n                        data: json.data,\n                        total: json.count\n                    };\n                case CREATE:\n                    console.log(json);\n                    return { data: { ...params.data, id: json.data.id } };\n                case GET_ONE:\n                    console.log(json);\n                    return { data: json.data };\n                case UPDATE:\n                    console.log(json);\n                    return { data: json.data };\n                case DELETE:\n                    console.log(json);\n                    return { data: json.data };\n                default:\n                    return { data: json.data };\n            }\n        });\n};","import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_CHECK, AUTH_GET_PERMISSIONS, AUTH_ERROR } from 'react-admin';\n\n// const apiLogin = 'http://ec2-35-168-9-164.compute-1.amazonaws.com:3001';\nconst apiLogin = 'http://localhost:3001';\nexport default (type, params) => {\n    if (type === AUTH_LOGIN) {\n        const { username, password } = params;\n        const request = new Request(`${apiLogin}/auth/login/admin`, {\n            method: 'POST',\n            body: JSON.stringify({ email: username, password }),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        })\n        return fetch(request)\n            .then(response => {\n                if (response.status < 200 || response.status >= 300) {\n                    throw new Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then(({ data, token }) => {\n                localStorage.setItem('token', token);\n                localStorage.setItem('role', data.role);\n            });\n    }\n    if (type === AUTH_LOGOUT) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('role');\n        return Promise.resolve();\n    }\n    //return Promise.resolve();\n    if (type === AUTH_CHECK) {\n        return localStorage.getItem('token') ? Promise.resolve() : Promise.reject();\n    }\n    if (type === AUTH_GET_PERMISSIONS) {\n        const role = localStorage.getItem('role');\n        return role ? Promise.resolve(role) : Promise.reject();\n    }\n    if (type === AUTH_ERROR) {\n        //const status = params.status;\n       // console.log(params);\n       // if (status === 401 || status === 403) {\n            // localStorage.removeItem('token');\n            // return Promise.reject();\n       // }\n        //return Promise.resolve();\n    }\n}","import React from 'react';\nimport { Filter, SelectInput, TextInput } from 'react-admin';\n\nexport const SearchFilter = (props) => (\n    <Filter {...props} >\n        <TextInput label=\"Search\" source=\"query\" alwaysOn />\n        < SelectInput optionText=\"name\" />\n    </Filter>\n);","import React from 'react';\nimport { List, Datagrid, TextField, DateField, Create, Edit, SimpleForm, TextInput, DisabledInput, EditButton, DeleteButton, } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\n\nexport const CategoryList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"name\" />\n            <DateField source=\"createdAt\" />\n            <DateField source=\"updatedAt\" />\n            <EditButton basePath=\"/categories\" />\n        </Datagrid>\n    </List>\n);\nconst CategoryTitle = ({ record }) => {\n    return <span>Category {record ? `\"${record.name}\"` : ''}</span>;\n};\n\nexport const CategoryCreate = (props) => (\n    <Create title=\"Create a Category\" {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" />\n        </SimpleForm>\n    </Create>\n);\n\nexport const CategoryEdit = (props) => (\n    <Edit title={<CategoryTitle />} {...props}>\n        <SimpleForm>\n            <DisabledInput source=\"id\" />\n            <TextInput source=\"name\" />\n        </SimpleForm>\n    </Edit>\n);\n","import React from 'react';\nimport { List, Datagrid, TextField, DateField, Create, Edit, SimpleForm, TextInput, DisabledInput, EditButton, DeleteButton } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\n\nexport const HashTagList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"name\" />\n            <DateField source=\"createdAt\" />\n            <DateField source=\"updatedAt\" />\n            <EditButton basePath=\"/hashTags\" />\n        </Datagrid>\n    </List>\n);\nconst HashTagTitle = ({ record }) => {\n    return <span>HashTag {record ? `\"${record.name}\"` : ''}</span>;\n};\n\nexport const HashTagCreate = (props) => (\n    <Create title=\"Create a HashTag\" {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" />\n        </SimpleForm>\n    </Create>\n);\n\nexport const HashTagEdit = (props) => (\n    <Edit title={<HashTagTitle />} {...props}>\n        <SimpleForm>\n            <DisabledInput source=\"id\" />\n            <TextInput source=\"name\" />\n        </SimpleForm>\n    </Edit>\n);\n","import React from 'react';\nimport { List, Datagrid, TextField, DateField, EmailField, Create, Edit, SimpleForm, TextInput, SelectInput, DisabledInput, EditButton } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\n//ArrayField,Create, Edit, SimpleForm, TextInput, DisabledInput,SelectField\n\nexport const UserList = props => (\n    <List filters={<SearchFilter />}{...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"fullName\" />\n            <EmailField source=\"email\" />\n            <TextField source=\"number\" />\n            <TextField source=\"role\" />\n            <DateField source=\"createdAt\" />\n            <DateField source=\"updatedAt\" />\n            <EditButton basePath=\"/users\" />\n            {/* <ArrayField source=\"subscribed\">\n                <Datagrid>\n                    <TextField source=\"id\" />\n                    <TextField source=\"name\" />\n                </Datagrid>\n            </ArrayField> */}\n        </Datagrid>\n    </List>\n);\nconst UserTitle = ({ record }) => {\n    return <span>User {record ? `\"${record.fullName}\"` : ''}</span>;\n};\n\n// export const UserCreate = (props) => (\n//     <Create title=\"Create a User\" {...props}>\n//         <SimpleForm>\n//             <TextInput source=\"name\" />\n//             {/* <SelectInput source=\"role\" choices={[\n//                 { id: 'admin', name: 'admin' },\n//                 { id: 'maintainer', name: 'maintainer' },\n//                 { id: 'user', name: 'user' }\n//             ]} optionText={\"name\"} optionValue={\"id\"} /> */}\n//         </SimpleForm>\n//     </Create>\n// );\n\nexport const UserEdit = (props) => (\n    <Edit title={<UserTitle />} {...props}>\n        <SimpleForm>\n            <DisabledInput source=\"id\" />\n            <DisabledInput source=\"fullName\" />\n            <DisabledInput source=\"email\" />\n            <DisabledInput source=\"number\" />\n            <SelectInput source=\"role\" choices={[\n                { id: 'admin', name: 'admin' },\n                { id: 'maintainer', name: 'maintainer' },\n                { id: 'user', name: 'user' }\n            ]} />\n        </SimpleForm>\n    </Edit>\n);\n","import React from 'react';\nimport CardActions from '@material-ui/core/CardActions';\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport { Link } from 'react-router-dom';\nimport { List, Datagrid, TextField, DateField, Create, Edit, SimpleForm, TextInput, DisabledInput, EditButton, DeleteButton, ReferenceArrayInput, SelectArrayInput, ChipField, ReferenceArrayField, ShowButton, RichTextField, TabbedForm, FormTab, SingleFieldList, ArrayField, ImageInput, ImageField, required, ReferenceManyField, ReferenceField, Button } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\nimport RichTextInput from 'ra-input-rich-text';\n\n\nconst AddNewCommentButton = ({ record }) => (\n    <Button\n        component={Link}\n        to={`/comments/create?postId=${record.id}`}\n        label=\"Add a comment\"\n    >\n        <ChatBubbleIcon />\n    </Button>\n);\n\nexport const PostList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"title\" sortable={false} />\n            <TextField source=\"reactionsCount\" sortable={false} />\n            <DateField source=\"createdAt\" sortable={false} />\n            <DateField source=\"updatedAt\" sortable={false} />\n            <EditButton basePath=\"/posts\" />\n        </Datagrid>\n    </List>\n);\nconst PostTitle = ({ record }) => {\n    return <span>Post {record ? `\"${record.title}\"` : ''}</span>;\n};\n\nexport const PostCreate = (props) => (\n    <Create title=\"Create a Post\" {...props}>\n        <SimpleForm>\n            <TextInput source=\"title\" validate={required()} />\n            {/* editor */}\n\n            <RichTextInput source=\"body\" toolbar={[\n                [{ 'size': ['small', false, 'large', 'huge'] }],\n                [{ 'font': [] }],\n                [{ 'direction': 'rtl' }],\n                [{ 'align': [] }],\n                ['bold', 'italic', 'underline', 'link', 'blockquote', 'video']]\n            } />\n\n            <ImageInput source=\"files\" label=\"Related pictures , First One is background image\" accept=\"image/*\" multiple>\n                <ImageField source=\"src\" title=\"title\" />\n            </ImageInput>\n\n            <ReferenceArrayInput label=\"categories\" reference=\"categories\" source=\"categories\" perPage={100} validate={required()}>\n                <SelectArrayInput >\n                    <ChipField source=\"name\" />\n                </SelectArrayInput>\n            </ReferenceArrayInput>\n\n            <ReferenceArrayInput label=\"tags\" reference=\"hashTags\" source=\"tags\" perPage={100} validate={required()}>\n                <SelectArrayInput >\n                    <ChipField source=\"name\" />\n                </SelectArrayInput>\n            </ReferenceArrayInput>\n        </SimpleForm>\n    </Create>\n);\n\nexport const PostEdit = (props) => (\n    <Edit title={<PostTitle />} {...props}>\n\n        <TabbedForm>\n            <FormTab label=\"summary\">\n                <DisabledInput source=\"id\" />\n                <DisabledInput source=\"title\" />\n                <DisabledInput source=\"reactionsCount\" />\n                <RichTextField source=\"body\" />\n                <ImageField source=\"backgroundImage\" title=\"backgroundImage\" />\n\n                <ArrayField source=\"categories\">\n                    <SingleFieldList>\n                        <ChipField source=\"name\" />\n                    </SingleFieldList>\n                </ArrayField>\n\n                <ArrayField source=\"tags\">\n                    <SingleFieldList>\n                        <ChipField source=\"name\" />\n                    </SingleFieldList>\n                </ArrayField>\n\n            </FormTab>\n            <FormTab label=\"update\">\n                <TextInput source=\"title\" />\n                <RichTextInput source=\"body\" toolbar={[\n                    [{ 'size': ['small', false, 'large', 'huge'] }],\n                    [{ 'font': [] }],\n                    [{ 'direction': 'rtl' }],\n                    [{ 'align': [] }],\n                    ['bold', 'italic', 'underline', 'link', 'blockquote', 'video']]\n                } />\n                <ReferenceArrayInput label=\"categories\" reference=\"categories\" source=\"categories\" perPage={100} validate={required()}>\n                    <SelectArrayInput source=\"name\" >\n                        <ChipField source=\"name\" />\n                    </SelectArrayInput>\n                </ReferenceArrayInput>\n\n                <ReferenceArrayInput label=\"tags\" reference=\"hashTags\" source=\"tags\" perPage={100} validate={required()}>\n                    <SelectArrayInput >\n                        <ChipField source=\"name\" />\n                    </SelectArrayInput>\n                </ReferenceArrayInput>\n            </FormTab>\n            <FormTab label=\"Comments\">\n                <ReferenceManyField\n                    label=\"Comments\"\n                    reference=\"comments\"\n                    target=\"post.id\"\n                >\n                    <Datagrid rowClick=\"edit\">\n                        <TextField source=\"id\" />\n                        <TextField source=\"body\" sortable={false} />\n                        <ReferenceField label=\"Author Name\" source=\"user.id\" reference=\"users\" sortable={false}>\n                            <ChipField source=\"fullName\" />\n                        </ReferenceField>\n                        <ReferenceField label=\"Author Email\" source=\"user.id\" reference=\"users\" sortable={false}>\n                            <ChipField source=\"email\" />\n                        </ReferenceField>\n                        <ReferenceField label=\"Post\" source=\"post.id\" reference=\"posts\" sortable={false}>\n                            <ChipField source=\"id\" />\n                        </ReferenceField>\n                        <TextField source=\"reports\" sortable={false} />\n                        <DateField source=\"createdAt\" sortable={false} />\n                        <DateField source=\"updatedAt\" sortable={false} />\n                        <EditButton basePath=\"/comments\" />\n                    </Datagrid>\n                </ReferenceManyField>\n                <AddNewCommentButton />\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n","import React from 'react';\nimport CardActions from '@material-ui/core/CardActions';\nimport ChatBubbleIcon from \"@material-ui/icons/ChatBubble\";\nimport { Link } from 'react-router-dom';\nimport { Button, List, Datagrid, TextField, DateField, Create, Edit, SimpleForm, TextInput, DisabledInput, EditButton, DeleteButton, ReferenceField, ChipField, TabbedForm, FormTab, ReferenceManyField, ReferenceInput, SelectInput } from 'react-admin';\nimport { SearchFilter } from '../shared/serachFilter';\nimport { parse } from 'query-string';\n\nconst AddNewReplyButton = ({ record }) => (\n    <Button\n        component={Link}\n        to={`/comments/create?parentId=${record.id}&postId=${record.post.id}`}\n        label=\"Add a Reply\"\n    >\n        <ChatBubbleIcon />\n    </Button>\n);\n\nexport const CommentList = props => (\n    <List filters={<SearchFilter />} {...props}>\n        <Datagrid rowClick=\"edit\">\n            <TextField source=\"id\" />\n            <TextField source=\"body\" sortable={false} />\n            <ReferenceField label=\"Post\" source=\"post.id\" reference=\"posts\" sortable={false}>\n                <ChipField source=\"id\" />\n            </ReferenceField>\n            <TextField source=\"reports\" sortable={false} />\n            <DateField source=\"createdAt\" sortable={false} />\n            <DateField source=\"updatedAt\" sortable={false} />\n        </Datagrid>\n    </List>\n);\nconst CommentTitle = ({ record }) => {\n    return <span>Comment {record ? `\"${record.body}\"` : ''}</span>;\n};\n\nexport const CommentCreate = (props) => {\n\n    const postId = parse(props.location.search).postId;\n    const parentId = parse(props.location.search).parentId || null;\n\n    return (\n        <Create title=\"Create a Comment\" {...props}>\n            <SimpleForm\n                defaultValue={{ postId, parentId }}\n                redirect={`/posts/${postId}/2`}\n            >\n                <DisabledInput source=\"postId\" />\n                <DisabledInput source=\"parentId\" />\n\n                <TextInput source=\"body\" />\n            </SimpleForm>\n        </Create>\n    )\n};\n\nexport const CommentEdit = (props) => (\n    <Edit title={<CommentTitle />} {...props}>\n        <TabbedForm>\n            <FormTab label=\"summary\">\n                <DisabledInput source=\"id\" />\n                <DisabledInput source=\"body\" />\n            </FormTab>\n            <FormTab label=\"replies\">\n                <ReferenceManyField\n                    label=\"replies\"\n                    reference=\"comments\"\n                    target=\"parentId\"\n                >\n                    <Datagrid rowClick=\"edit\">\n                        <TextField source=\"id\" />\n                        <TextField source=\"body\" sortable={false} />\n                        <ReferenceField label=\"Author Name\" source=\"user.id\" reference=\"users\" sortable={false}>\n                            <ChipField source=\"fullName\" />\n                        </ReferenceField>\n                        <ReferenceField label=\"Author Email\" source=\"user.id\" reference=\"users\" sortable={false}>\n                            <ChipField source=\"email\" />\n                        </ReferenceField>\n                        <ReferenceField label=\"Post\" source=\"post.id\" reference=\"posts\" sortable={false}>\n                            <ChipField source=\"id\" />\n                        </ReferenceField>\n                        <TextField source=\"reports\" sortable={false} />\n                        <DateField source=\"createdAt\" sortable={false} />\n                        <DateField source=\"updatedAt\" sortable={false} />\n                        <EditButton basePath=\"/comments\" />\n                    </Datagrid>\n                </ReferenceManyField>\n                <AddNewReplyButton />\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n","import React from 'react';\nimport { Admin, Resource } from 'react-admin';\n/* icons start*/\nimport PostIcon from '@material-ui/icons/Book';\nimport UserIcon from '@material-ui/icons/People';\nimport ListIcon from '@material-ui/icons/LibraryBooks';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport ReportIcon from '@material-ui/icons/Report';\n/* icons end */\n\n/* rest providers & auth start*/\nimport dataProvider from './dataProvider/dataProvider';\nimport authProvider from './auth/authProvider';\n/* rest providers & auth end*/\n\n/* dashboard modules start */\nimport { CategoryList, CategoryCreate, CategoryEdit } from './category/categories';\nimport { HashTagList, HashTagCreate, HashTagEdit } from './hashTag/hashTags';\nimport { UserList, UserEdit } from './user/user';\nimport { PostList, PostCreate, PostEdit } from './post/post';\nimport { CommentList, CommentEdit, CommentCreate } from './comment/comment';\n/* dashboard modules end */\n\nconst App = () => (\n  <Admin authProvider={authProvider} dataProvider={dataProvider}>\n    {permissions => [\n      permissions === 'admin'\n        ? <Resource name=\"users\" list={UserList} edit={UserEdit} icon={UserIcon} />\n        : null,\n      <Resource name=\"categories\" list={CategoryList} create={CategoryCreate} edit={CategoryEdit} />,\n      <Resource name=\"hashTags\" list={HashTagList} create={HashTagCreate} edit={HashTagEdit} icon={ListIcon} />,\n      <Resource name=\"posts\" list={PostList} create={PostCreate} edit={PostEdit} icon={PostIcon} />,\n      <Resource name=\"comments\" list={CommentList} create={CommentCreate} edit={CommentEdit} icon={CommentIcon} />,\n      <Resource name=\"reports\" icon={ReportIcon} />\n\n    ]}\n\n  </Admin>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}